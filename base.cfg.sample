# Copy this file to base.cfg and edit it

# Absolute paths and/or names of binaries (default path is /usr/bin)
qemu_binary = qemu
qemu_img_binary = qemu-img
qemu_io_binary = qemu-io

# List of virtual machine object names (whitespace seperated)
vms = vm1
# Default virtual machine to use, when not specified by test.
main_vm = vm1

# List of default network device object names (whitespace seperated)
# All VMs get these by default, unless specific vm name references
# are used, for example:
#
# vms = vm1 vm2 vm3 vm4
# nics = nic1 nic2 nic3
# nics_vm1 = nic2
# nics_vm2 =
# nics_vm3 = nic1 nic3
#
# Translates to:
# VM 'vm1' uses only 'nic2'
# VM 'vm2' uses no nics
# VM 'vm3' uses 'nic1' and 'nic3'
# VM 'vm4' uses all three nics
nics = nic1
# List of end-point bridges to connect NIC devices to on host
# For private bridge created by framework please set the following
# parameters:
# bridge = private
# physical_nic(optinal): physical nic for bridge
# bridge_force_create(optinal): force to setup bridge or not, default
#                                value is no.
bridge = switch
# For libvirt, use following as argument to --network
virsh_network = network=default

# List of block device object names (whitespace seperated)
images = image1
# List of block device object names with order (whitespace seperated)
# Example: $base $sn1 $sn2
image_chain = ""
# List of optical device object names
cdroms = cd1

# USB controller object names (whitespace seperated)
usbs = usb1
# USB controller type, run following command to see supported controller.
# `qemu-kvm -device \? 2>&1 | grep "usb.*bus PCI"`
usb_type = ich9-usb-uhci1
# Max ports on a controller.
usb_max_port = 2

# USB device object names (whitespace seperated)
usb_devices = tablet1
# USB device type, run following command to see device list on your host.
# `qemu-kvm -device \? 2>&1 | grep "bus USB"`
usb_type_tablet1 = usb-tablet
# USB Controller type which device uses.
usb_controller_tablet1 = uhci

# virtio_serialport and virtio_console ports
# virtio_ports = "vs1 vs2 vc1"
# Port types
# virtio_port_type = serialport
# virtio_port_type_vc1 = console
# Host socket type
# virtio_port_chardev = spicevmc
# virtio_port_chardev_vc1 = socket
# chardev name prefix (port index will be appended)
# virtio_port_name_prefix = "com.redhat.spice."
# By default the port name is used (vc1)
# virtio_port_name_prefix_vc1 = ""

# Emulated machine type, run following command to see supported machine type.
# qemu-kvm -M ?
# machine_type = pc



##### Low-level parameters for platform, networking, block, and usb devices.

# Default number of processors for each VM
smp = 1
# Config for vcpu
#vcpu_cores = 1
#vcpu_threads = 1
#vcpu_sockets = 1

# Memory for each VM
mem = 1024

# Networking type (nic, user, tap, socket, vde, dump, none)
nic_mode = tap

# initial PCI address for guest.
init_pci_addr = 4

# Host networking restart command line for PCI assign cases
# net_restart_cmd = /etc/init.d/network restart

# Size of file-based qcow2 image, if image_raw-device not used.
image_size = 10G

# Use raw block device node or file-based qcow2 format
image_raw_device = no
# Name of image, or path to device node if using image_raw_device
image_name = image

# Host-side caching to use. This option is passed directly to qemu(-kvm) so
# any valid qemu cache option is valid here. A quick reference for the
# valid cache modes on current qemu:
#
# none: avoids the page cache completely, attempt to do disk IO directly to the
#       guest memory.
#
# writethrough: use host page cache, report data as written to guest only when
#               it's actually written by the storage subsystem (qemu default).
#
# writeback: use host page cache, report data as written to guest as soon as it
#            is written to the host page cache.
#
# unsafe: use page cache, but never worry about flushing that data to disk.
#
# directsync: avoid page cache, report data as written to guest after it's
#             reported as written by the storage subsystem.
#
drive_cache = none

# Iscsi support related params. Please fill them depends on your environment.
# For both iscsi and emulated iscsi should have this option:
# target: target name of your iscsi device
# device_id(optinal): The number of your device if the iscsi device already formated
# For iscsi device only:
# portal_ip: iscsi server ip
# initiator: initiator name
# For emulated iscsi in localhost only:
# emulated_image: image name in localhost
# Other option parameters:
# force_cleanup: if need logout and cleanup after the case. The value should
#                be yes or no
# emulated_file_remove(emulated iscsi only): If remove the file after logout
#
# List of hypervisor-monitor object names (one per guest),
#    used to communicate with hypervisor to control guests.
#    Order cooresponds to 'vms' list above.
monitors = hmp1
# hmp1 monitor type (protocol), if only hmp1 type is going to be set
#monitor_type_hmp1 = human
# Default monitor type (protocol), if multiple types to be used
monitor_type = human
# Pattern to get vcpu threads from monitor.
#    human monitor: thread_id=(\d+)
#    qmp monitor: u'thread_id':\s+(\d+)
vcpu_thread_pattern = "thread_id=(\d+)"

# Guest Display type (vnc, sdl, spice, or nographic)
display = vnc

# VNC autoport selection.
vnc_autoport = yes

# Guest VGA type (cirrus,  std, vmware, qxl, xenfb, none)
vga = std

# Add a sga device to guest.
#enable_sga = yes

###
# Capture contents of display during each test
take_regular_screendumps = yes
keep_screendumps_on_error = yes
screendump_delay = 5
# Encode video from vm screenshots
encode_video_files = yes

# Set boot order
boot_order = cdn
# Use the first hard disk for boot device once
boot_once = c
# Enable/Disable boot menu
boot_menu = off

#### SPICE related options valid if display == spice,
#### you should set vga = qxl to get SPICE in use
qxl_dev_nr = 2
qxl_dev_memory = 33554432
spice_password = 123456
spice_addr = 0

spice_ssl = yes
spice_tls_ciphers = DEFAULT
spice_gen_x509 = yes

# x509_dir uses passphrase less key by default (defined in x509_secure)
# spice_x509_dir = no will enable x509_key_file, x509_cert_file and
# x509_cacert_file
spice_x509_dir = yes

spice_x509_prefix = /tmp/spice_x509d
spice_x509_key_file = server-key.pem
spice_x509_cacert_file = ca-cert.pem
spice_x509_cert_file = server-cert.pem
spice_x509_key_password = testPassPhrase
spice_x509_secure = no
spice_x509_cacert_subj = /C=CZ/L=BRNO/O=SPICE/CN=my CA
spice_x509_server_subj = /C=CZ/L=BRNO/O=SPICE/CN=my Server
spice_secure_channels = main, inputs

# Less common options
# image compression opts (auto_glz, auto_lz, quic, glz, lz, off)
spice_image_compression = auto_glz
# jpeg wan compression opts (auto, never, always)
spice_jpeg_wan_compression = auto
# zlib-glz wan compression opts (auto, never, always)
spice_zlib_glz_wan_compression = auto
# streaming-video opts (off, all, filter)
spice_streaming_video = all
# agent mouse opts (on, off)
spice_agent_mouse = on
# playback compression opts (on, off)
spice_playback_compression = on
spice_ipv4 = yes
spice_ipv6 = no

##### Less-common and default parameters expected by some tests,
##### do not modify unless you know what you're doing.

# Whether to run the qemu binary with malloc perturb set.
#    Off by default, set to 'yes' to enable
malloc_perturb = no

# Monitor network traffic during testing
run_tcpdump = yes

# Block devices
drive_index_image1 = 0
drive_index_cd1 = 1
# You can specify a blkdebug file here, relative to kvm/blkdebug dir
#    we have a premade default.conf in there. Important to note that you
#    can set this for any image defined in the config at a given time
#    drive_blkdebug_image1 = blkdebug/default.conf
#    drive_blkdebug_image1 =
# What to do whether a read error is detected, such as 'stop'
drive_rerror_image1 =
# What to do whether a write error is detected, such as 'stop'
drive_werror_image1 =
# KVM qcow2 image verification and backup settings
# Enable backup_image = yes only in some specific tests, such as
#    unattended_install. In all other tests, it should be no, so keep the global
#    as is.
backup_image = no
backup_dir = /tmp
# Enable backup_image_on_check_error = yes globally to allow isolate bad images
#    for investigation purposes
backup_image_on_check_error = no
# Enable restore_image_on_check_error = yes globally to allow restore a image
#    that had a check image with a pristine image. Works only if
#    backup_image_on_check_error = yes, of course. For tests such as
#    unattended_install, you'll have to set it to no, since if it fails, we won't
#    have an image at all, so you save time.
restore_image_on_check_error = no

## UHCI's multifunction configure.
# usb_type_usb1 = ich9-usb-uhci1
# multifunction_usb1 = on
# masterbus_usb1 = usb1
# firstport_usb1 = 0
## EHCI's multifunction configure.
# usb_type_usb2 = usb-ehci
# multifunction_usb2 = on

# Some preprocessor/postprocessor params
start_vm = yes
paused_after_start_vm = no
kill_vm = no
kill_vm_gracefully = yes
kill_unresponsive_vms = yes
# Don't kill vm via monitor until it becomes paused
kill_vm_only_when_paused = yes
# Wait time before kill vm
kill_timeout = 60

# Screendump thread params
convert_ppm_files_to_png_on_error = yes
keep_ppm_files = no
keep_ppm_files_on_error = no
screendump_quality = 30
screendump_temp_dir = /dev/shm
screendump_verbose = no
keep_video_files = yes
keep_video_files_on_error = yes

# Default remote shell port (SSH under linux)
shell_port = 22
# If you need more ports to be available for comm between host and guest,
# please see https://github.com/autotest/autotest/wiki/KVMAutotest-Networking

# Default scheduler params
used_cpus = 1
used_mem = 512

# Cpu model params
auto_cpu_model = "yes"
cpu_model_flags = ""

# Port redirections
redirs = remote_shell
guest_port_remote_shell = 22

# Profilers
profilers = kvm_stat

# Timeouts
login_timeout = 360

# NFS directory of guest images
# images_good = fileserver.foo.com:/autotest/images_good

# Above lines are reserved for upstream.
# Please Don't add any config before shutdown.
# Below config are only existed in internal tree.
#

# Define the objects we'll be using
vm_type = kvm

main_monitor = qmpmonitor1
monitor_type_qmpmonitor1 = qmp

# Display
display = vnc

# If display = spice, you can set specific spice stuff here
qxl = on
qxl_dev_nr = 1
spice = disable-ticketing

# virtlab tests configuartion file
profilers = "kvm_stat "
try_serial_login = 'yes'
dd_timeout = 900

check_img = no

nic_pci_addr_nic1 = 3
image_aio = native
init_pci_addr = 4

# ksm is disabled
ksm = 0

index_enable = no
#you can specify the drive_index by
#drive_index_$image/stage/cd = $number
#drive_pci_addr_image1 = 4

# key need to report to virtlab UI
important_key = guest_name,platform,smp,mem,drive_format,nic_model,type,ksm,image_format,kvm_version,kvm_userspace_version,tag,medium,installation

kill_vm_on_error = yes
kill_vm_in_paused = yes

convert_ppm_files_to_png = yes
keep_screendumps = yes

kvm_ver_cmd = "grep -q el5 /proc/version && cat /sys/module/kvm/version || uname -r"
kvm_userspace_ver_cmd = "grep -q el5 /proc/version && rpm -qa | grep ^kvm-83-.* || rpm -qa | grep qemu-kvm-[0-9].*-.* | head -n 1"

vcpu_cores = 0
vcpu_threads = 1
vcpu_sockets = 2

# NFS directory of guest images
images_good = fileserver.foo.com:/autotest/images_good

# Regex for get peer device for a net device.
# This regex is for Fedora host (with qemu-kvm 0.15.*),
netdev_peer_re = "\s{2,}(.*?): .*?\\\s(.*?):"
# for RHEL5 host, the regex should be:
# netdev_peer_re = "\s{2,}(.*?): .*?\s{2,}(.*?):"
# for RHEL6 host, the regex should be:
# netdev_peer_re = "\s{2,}(.*?):.*?peer=(.*?)\s"

# You can set custom commands to verify kvm module and userspace version, here
# is a convenient example for RHEL and Fedora.
#kvm_ver_cmd = "modinfo kvm | grep vermagic | awk '{print $2}'"
#kvm_userspace_ver_cmd = "grep -q el5 /proc/version && rpm -q kvm || rpm -q qemu-kvm"

image_clone_commnad = 'cp --reflink=auto %s %s'
image_remove_commnad = 'rm -rf %s'

indirect_image_blacklist = "/dev/hda.* /dev/sda.* /dev/sg0 /dev/md0"

# Floppy size when unattended installing guests
# 1.44MB for Linux, but 2.88MB for Windows guest, same as the virtio-win.vfd
vfd_size = 1440k

# Internal case configuration end. Don't add any line below this line.
# (THIS LINE IS RESERVED FOR MERGE)
# (THIS LINE IS RESERVED FOR MERGE)
# (THIS LINE IS RESERVED FOR MERGE)
