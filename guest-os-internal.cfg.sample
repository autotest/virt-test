# Copy this file to guest_os.cfg and edit it.
#
# Guests
variants:
    # Linux section
    - @Linux:
        network_query = ifconfig
        shutdown_command = shutdown -h now
        reboot_command = shutdown -r now
        status_test_command = echo $?
        cpu_chk_cmd = grep processor /proc/cpuinfo | wc -l
        cores_chk_cmd = grep 'cpu cores' /proc/cpuinfo | uniq
        sockets_chk_cmd = grep 'physical id' /proc/cpuinfo |sort |uniq |wc -l
        get_siblings_num = grep siblings /proc/cpuinfo| uniq
        mem_chk_cmd = dmidecode -t 17 |awk -F: '/Size/ {print $2}'
        mem_chk_cur_cmd = grep MemTotal /proc/meminfo
        get_time_cmd = date +'TIME: %a %m/%d/%Y %H:%M:%S.%N'
        username = root
        password = 123456
        shell_client = ssh
        shell_port = 22
        dst_dir = /mnt/linux/
        shell_prompt = "\[root@.{0,50}][\#\$] "
        migration_test_command = uname -r
        file_transfer_client = scp
        file_transfer_port = 22
        extra_params += " -no-kvm-pit-reinjection"
        # these config are used in virt_test_utils.get_readable_cdroms()
        cdrom_get_cdrom_cmd = "ls /dev/cdrom*"
        cdrom_check_cdrom_pattern = "/dev/cdrom-\w+|/dev/cdrom\d*"
        cdrom_test_cmd = "dd if=%s of=/dev/null bs=1 count=1"

        stress_boot:
            alive_test_cmd = ps aux
        format_disk:
            format_cmd = cd /dev && for i in `ls | egrep [shv]db`;do yes |mkfs.ext3 $i; done
            mount_cmd =  cd /dev && ls | egrep [shv]db | xargs -I dev mount -t ext3 dev /media
            testfile_name = /media/txt.txt
            readfile_cmd = cat
        unattended_install, check_block_size.4096_512, check_block_size.512_512:
            #pre_command += "scripts/private_br.sh tftp;"
            # If you want to use floppy to hold kickstarts,
            # comment the 3 lines below
            cdroms += " unattended"
        unattended_install.cdrom.multi_disk_install:
            images += " stg25"
        timedrift:
            #time_command = date +'TIME: %a %m/%d/%Y %H:%M:%S.%N'
            time_command = "ntpdate -d -q ns1.nay.redhat.com"
            #time_filter_re = "(?:TIME: \w\w\w )(.{19})(?:\.\d\d)"
            time_filter_re = "originate timestamp:.*, (.\w+\s+\d+\s+\d+\s+\d+:\d+:\d+)\.(.\d+)"
            time_format = "%b %d %Y %H:%M:%S"
            guest_load_command = "dd if=/dev/zero of=/dev/null"
            guest_load_instances = 2
            guest_load_stop_command = "killall -9 dd"
            host_load_command = "bzip2 -c --best /dev/urandom > /dev/null"
            host_load_instances = 8
            with_load.full_load:
                guest_load_instances = 1
                guest_load_command = touch /tmp/guest_load_timedrift; for (( I=0; I<`grep -c 'processor' /proc/cpuinfo`; I++ )); do echo $I;taskset -c $I /bin/bash -c 'while [ -e /tmp/guest_load_timedrift ]; do :; done&'; done
                host_load_instances = 0
                guest_load_stop_command = rm -f /tmp/guest_load_timedrift
        guest_s3, balloon_check.enable.balloon-guest_s3, acpi_after_hotplug.acpi_guest_s3:
            no virtio_blk
            no virtio_net
            check_s3_support_cmd = dmesg -c  && grep -q mem /sys/power/state
            bg_cmd = "cd /tmp/; nohup ping localhost"
            check_bg_cmd = pgrep ping
            check_s3_cmd = dmesg |grep -E "ACPI: Waking up from system sleep state S3"\|"ACPI: PCI interrupt for device .* disabled"
            set_s3_cmd = "echo 'mem'  > /sys/power/state"
            kill_bg_cmd = pkill ping
        guest_s4, acpi_after_hotplug.acpi_guest_s4, balloon_check.enable.balloon-guest_s4:
            no virtio_blk
            no virtio_net
            check_s4_support_cmd = "dmesg -c  && grep -q disk /sys/power/state"
            bg_cmd = "cd /tmp/; nohup ping localhost"
            check_bg_cmd = pgrep ping
            check_s4_cmd = dmesg | grep -E "ACPI: Waking up from system sleep state S4"\|"ACPI: PCI interrupt for device .* disabled"
            set_s4_cmd = echo disk > /sys/power/state
            kill_bg_cmd = pkill ping
        nic_hotplug:
            modprobe_module = acpiphp
        block_hotplug:
            modprobe_module = acpiphp
        acpi_after_hotplug:
            modprobe_module = acpiphp
        floppy_test:
            format_floppy_cmd = mkfs -t ext3 /dev/fd0
            test_floppy_cmd = (dd if=/dev/urandom of=/mnt/test_floppy bs=1M count=1) && (rm -f /mnt/test_floppy)
            format_floppy_cmd = mkfs -t ext3 /dev/fd0
            source_file = /etc/passwd
            dest_file = /mnt/passwd
            clean_cmd = rm -f
            mount_dir = /mnt/
            diff_file_cmd = diff
            copy_cmd = cp
        readonly_floppy:
            format_floppy0_cmd = mkfs -t ext3 /dev/fd0
            format_floppy1_cmd = mkfs -t ext3 /dev/fd1
        file_transfer:
            tmp_dir = /tmp/
            clean_cmd = rm -f
        physical_resources_check:
            cpu_vendor_id = "AuthenticAMD"
            cpu_vendor_id_chk_cmd = grep vendor_id /proc/cpuinfo
        nicdriver_unload:
            readlink_command = readlink -e
            sys_path = "/sys/class/net/%s/device/driver"
        multi_disk:
            show_mount_cmd = mount|gawk '/mnt/{print $1}'
            clean_cmd = "\rm -rf /mnt/*"
            cmd_list = "copy_to_command copy_from_command"
            file_system = "ext3 ext2"
            mount_command = mkdir /mnt/%s && mount /dev/%s /mnt/%s
            umount_command = umount /dev/%s && rmdir /mnt/%s
            list_volume_command = cd /dev && \ls [vhs]d?
            re_str = "[vhs]d[a-z]"
            format_command = echo y | mkfs -t %s /dev/%s
            copy_to_command = \cp -rf /bin/ls /mnt/%s
            copy_from_command = \cp -rf /mnt/%s/ls /tmp/ls
            compare_command = cd /bin && md5sum ls > /tmp/ls.md5 && cd /tmp && md5sum -c ls.md5
            check_result_key_word = OK
            max_disk:
                soundcards = ""
                stg_image_num = 27
                list_volume_command = cd /dev && \ls vd*
                re_str = "([vhs]d[a-z]+)\W"
        usb_multi_disk:
            show_mount_cmd = mount|gawk '/mnt/{print $1}'
            clean_cmd = "\rm -rf /mnt/*"
            cmd_list = "copy_to_command copy_from_command"
            file_system = "ext3 ext2"
            mount_command = mkdir /mnt/%s && mount /dev/%s /mnt/%s
            umount_command = umount /dev/%s && rmdir /mnt/%s
            list_volume_command = cd /dev && \ls [vhs]d?
            re_str = "[vhs]d[a-z]"
            format_command = echo y | mkfs -t %s /dev/%s
            copy_to_command = \cp -rf /bin/ls /mnt/%s
            copy_from_command = \cp -rf /mnt/%s/ls /tmp/ls
            compare_command = cd /bin && md5sum ls > /tmp/ls.md5 && cd /tmp && md5sum -c ls.md5
            check_result_key_word = OK
            max_disk:
                list_volume_command = cd /dev && \ls [vhs]d*
                re_str = "([vhs]d[a-z]+)\W"
        rh_kernel_update, kexec:
            64:
                kernel_re = .*kernel-%s.el.*.x86_64.*
            PAE:
                kernel_re = .*kernel-PAE-%s.el.*.i686.*
            32:
                kernel_re = .*kernel-%s.el.*.i686.*

        variants:
            - RHEL:
                shell_prompt = "^\[.*\][\#\$]\s*$"
                password = redhat
                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                    boot_path = images/pxeboot
                    kill_vm_gracefully = no
                    # You have to use ks=floppy if you want to use floppies to
                    # hold your kickstart file
                    #extra_params += " --append 'ks=floppy nicdelay=60 console=ttyS0,115200 console=tty0'"
                    extra_params += " -no-shutdown"
                    kernel_params = "ks=cdrom nicdelay=60 console=ttyS0,115200 console=tty0"
                    boot_once = d
                variants:
                    - 3.9:
                        kill_vm_gracefully = no
                        image_name = RHEL-3.9
                        guest_name = RHEL-3.9
                        image_size = 20G
                        password = 123456
                        fillup_disk:
                            fillup_cmd = "dd if=/dev/zero of=/%s/fillup.%d bs=%dM count=1"
                        multi_disk.default:
                            list_volume_command = cd /dev && \ls hd[a-d]
                        multi_disk.max_disk:
                            list_volume_command = cd /dev && \ls vd[a-l]
                        hdparm:
                            get_disk_cmd = \ls /dev/hda
                            low_status_cmd = hdparm -a32 -m0 -d0 -u0 %s
                            high_status_cmd = hdparm -a128 -m16 -d1 -u1 %s
                        format_disk:
                            format_cmd = cd /dev && echo hdb | xargs mkfs.ext3
                            mount_cmd =  test -d /media || mkdir /media && cd /dev && mount -t ext3 hdb /media
                        physical_resources_check:
                            mem_chk_cmd = dmidecode | awk -F: '/Maximum Capacity/ {print $2}'
                            mem_chk_re_str = [^\$]([0-9]+)
                        ioquit:
                            check_cmd = "sleep 5; pgrep dd"
                        stress_kernel_compile:
                            test_src = "http://fileshare.englab.nay.redhat.com/pub/section2/kvm/gyue/linux-2.6.18.tar.bz2"
                            test_cmd = "(tar xfj linux-2.6.18.tar.bz2 && cd linux-2.6.18 && make defconfig && make -j `grep processor /proc/cpuinfo | wc -l`) > /dev/null"
                        physical_resources_check:
                            vms= "vm1"
                            catch_serial_cmd =

                        variants:
                            - 32:
                                image_name += -32
                                guest_name += -32
                                install:
                                    steps = steps/RHEL-3.9-i386.steps
                                    cdrom=isos/linux/RHEL3.9-i386-DVD.iso
                                    md5sum_cd1=0ee24bedd023cddadeb53daf3efcf3c4
                                    md5sum_1m_cd1=e7dc7e83b6a9fc0cbfe7061c470716cc
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    kernel_params = "ks=floppy nicdelay=60 console=ttyS0,115200 console=tty0"
                                    unattended_file = unattended/RHEL-3-series.ks
                                    floppy = images/rhel39-32/ks.vfd
                                    #cdrom_unattended = images/rhel39-32/ks.iso
                                    kernel = images/rhel39-32/vmlinuz
                                    initrd = images/rhel39-32/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL3.9-i386-DVD.iso
                                    cdroms = cd1
                                virtio_driver_install:
                                    virtio_install_file = linux/virtio_driver-EL-3.9-32.tar.bz2

                            - 64:
                                image_name += -64
                                guest_name += -64
                                image_size = 20G
                                install:
                                    steps = RHEL-3.9-x86_64.steps
                                    cdrom = isos/linux/RHEL3.9-x86_64-DVD.iso
                                    md5sum_cd1 = 1260c68e8840a6dc06e0e0c578c91fc3
                                    md5sum_1m_cd1 = bc6998f31328338d9aeeaf26cbb323ee
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    kernel_params = "ks=floppy nicdelay=60 console=ttyS0,115200 console=tty0"
                                    unattended_file = unattended/RHEL-3-series.ks
                                    floppy = images/rhel39-64/ks.vfd
                                    #cdrom_unattended = images/rhel39-64/ks.iso
                                    kernel = images/rhel39-64/vmlinuz
                                    initrd = images/rhel39-64/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL3.9-x86_64-DVD.iso
                                    cdroms = cd1
                                virtio_driver_install:
                                    virtio_install_file = linux/virtio_driver-EL-3.9-64.tar.bz2

                            - PAE:
                                no install
                                image_name += -PAE
                                guest_name += -PAE

                    - 4.9:
                        image_name = RHEL-4.9
                        guest_name = RHEL-4.9
                        image_size = 20G
                        brew_tag = dist-4E-kernel
                        fillup_disk:
                            fillup_cmd = "dd if=/dev/zero of=/%s/fillup.%d bs=%dM count=1"
                        qmp_event_notification.qmp_watchdog:
                            event_cmd = modprobe ib700wdt && sleep 3 && echo 0 > /dev/watchdog
                        qmp_event_notification.qmp_watchdog.qmp_pause:
                            extra_params = " -watchdog ib700 -watchdog-action pause "
                        qmp_event_notification.qmp_watchdog.qmp_reset:
                            extra_params = " -watchdog ib700 -watchdog-action reset "
                        qmp_event_notification.qmp_watchdog.qmp_poweroff:
                            extra_params = " -watchdog ib700 -watchdog-action poweroff "
                        qmp_event_notification.qmp_watchdog.qmp_shutdown:
                            extra_params = " -watchdog ib700 -watchdog-action shutdown "
                        qmp_event_notification.qmp_watchdog.qmp_debug:
                            extra_params = " -watchdog ib700 -watchdog-action debug "
                        qmp_event_notification.qmp_watchdog.qmp_none:
                            extra_params = " -watchdog ib700 -watchdog-action none "
                        stress_kernel_compile:
                            test_src = "http://fileshare.englab.nay.redhat.com/pub/section2/kvm/gyue/linux-2.6.18.tar.bz2"
                            test_cmd = "(tar xfj linux-2.6.18.tar.bz2 && cd linux-2.6.18 && make defconfig && make -j `grep processor /proc/cpuinfo | wc -l`) > /dev/null"
                        block_hotplug:
                            pci_test_cmd = "echo %s; yes | mke2fs `\ls /dev/[sv]d[a-z]*|tail -1`"
                        ioquit:
                            check_cmd = "sleep 5; pgrep dd"
                        nicdriver_unload:
                            readlink_command = readlink -f
                            sys_path = "/sys/class/net/%s/driver"
                        timedrift:
                            boot_option_added = "divider=10 clock=pmtmr"
                        physical_resources_check:
                            vms= "vm1"
                            catch_serial_cmd =
                        netstress_kill_guest:
                            nic_module_cmd = "ls -l --color=never /sys/class/net/*/driver"
                        rh_kernel_update, kexec:
                            64:
                                kernel_re = .*kernel-smp-%s.el.*.x86_64.*
                            PAE:
                                kernel_re = .*kernel-hugemem-%s.el.*.i686.*
                            32:
                                kernel_re = .*kernel-smp-%s.el.*.i686.*

                        variants:
                            - 32:
                                image_name += -32
                                guest_name += -32
                                install:
                                    steps = RHEL-AS-4.9-32.steps
                                    cdrom_cd1 = isos/linux/RHEL4.9-i386-AS-DVD.iso
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-4-series.ks
                                    #floppy = images/rhel48-32/ks.vfd
                                    cdrom_unattended = images/rhel48-32/ks.iso
                                    kernel = images/rhel48-32/vmlinuz
                                    initrd = images/rhel48-32/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL4.9-i386-AS-DVD.iso

                            - 64:
                                image_name += -64
                                guest_name += -64
                                install:
                                    steps = RHEL-AS-4.9-64.steps
                                    cdrom_cd1 = isos/linux/RHEL4.9-x86_64-AS-DVD.iso
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-4-series.ks
                                    #floppy = images/rhel48-64/ks.vfd
                                    cdrom_unattended = images/rhel48-64/ks.iso
                                    kernel = images/rhel48-64/vmlinuz
                                    initrd = images/rhel48-64/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL4.9-x86_64-AS-DVD.iso
                                timedrift:
                                    boot_option_added = "divider=10 notsc"

                            - PAE:
                                no install
                                image_name += -PAE
                                guest_name += -PAE

                    - 5.7:
                        guest_name = RHEL-Server-5.7
                        image_name = RHEL-Server-5.7
                        image_size = 20G
                        brew_tag = RHEL-5.7-Z
                        timedrift.without_pvclock:
                             boot_option_added = "divider=10 clocksource=acpi_pm"
                        physical_resources_check:
                            vms= "vm1"
                            catch_serial_cmd =

                        variants:
                            - 32:
                                guest_name += -32
                                image_name += -32
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-5-series.ks
                                    #floppy = images/rhel57-32/ks.vfd
                                    cdrom_unattended = images/rhel57-32/ks.iso
                                    kernel = images/rhel57-32/vmlinuz
                                    initrd = images/rhel57-32/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL-Server-5.7-i386-DVD.iso
                            - 64:
                                guest_name += -64
                                image_name += -64
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-5-series.ks
                                    #floppy = images/rhel57-64/ks.vfd
                                    cdrom_unattended = images/rhel57-64/ks.iso
                                    kernel = images/rhel57-64/vmlinuz
                                    initrd = images/rhel57-64/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL-Server-5.7-x86_64-DVD.iso
                                timedrift.without_pvclock:
                                    boot_option_added = "divider=10 notsc"
                            - PAE:
                                guest_name += -PAE
                                image_name += -PAE

                    - 5.8:
                        guest_name = RHEL-Server-5.8
                        image_name = RHEL-Server-5.8
                        image_size = 20G
                        brew_tag = RHEL-5.8-Z
                        timedrift.without_pvclock:
                             boot_option_added = "divider=10 clocksource=acpi_pm"
                        physical_resources_check:
                            vms= "vm1"
                            catch_serial_cmd =

                        variants:
                            - 32:
                                guest_name += -32
                                image_name += -32
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-5-series.ks
                                    #floppy = images/rhel57-32/ks.vfd
                                    cdrom_unattended = images/rhel58-32/ks.iso
                                    kernel = images/rhel58-32/vmlinuz
                                    initrd = images/rhel58-32/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL-Server-5.8-i386-DVD.iso
                            - 64:
                                guest_name += -64
                                image_name += -64
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL-Server-5.8-x86_64-DVD.iso
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-5-series.ks
                                    #floppy = images/rhel57-64/ks.vfd
                                    cdrom_unattended = images/rhel58-64/ks.iso
                                    kernel = images/rhel58-64/vmlinuz
                                    initrd = images/rhel58-64/initrd.img
                                timedrift.without_pvclock:
                                    boot_option_added = "divider=10 notsc"
                            - PAE:
                                guest_name += -PAE
                                image_name += -PAE

                    - 5.9:
                        guest_name = RHEL-Server-5.9
                        image_name = RHEL-Server-5.9
                        image_size = 20G
                        brew_tag = dist-5E-U9
                        timedrift.without_pvclock:
                             boot_option_added = "divider=10 clocksource=acpi_pm"
                        physical_resources_check:
                            vms= "vm1"
                            catch_serial_cmd =

                        variants:
                            - 32:
                                guest_name += -32
                                image_name += -32
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-5-series.ks
                                    #floppy = images/rhel59-32/ks.vfd
                                    cdrom_unattended = images/rhel59-32/ks.iso
                                    kernel = images/rhel59-32/vmlinuz
                                    initrd = images/rhel59-32/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL-Server-5.9-i386-DVD.iso
                            - 64:
                                guest_name += -64
                                image_name += -64
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL-Server-5.9-x86_64-DVD.iso
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-5-series.ks
                                    #floppy = images/rhel59-64/ks.vfd
                                    cdrom_unattended = images/rhel59-64/ks.iso
                                    kernel = images/rhel59-64/vmlinuz
                                    initrd = images/rhel59-64/initrd.img
                                timedrift.without_pvclock:
                                    boot_option_added = "divider=10 notsc"
                            - PAE:
                                guest_name += -PAE
                                image_name += -PAE

                    - 6.1:
                        guest_name = RHEL-Server-6.1
                        image_name = RHEL-Server-6.1
                        image_size = 20G
                        brew_tag = RHEL-6.1-Z-candidate
                        nic_hotplug:
                            modprobe_module = ""
                        block_hotplug:
                            modprobe_module = ""
                        acpi_after_hotplug:
                            modprobe_module = ""
                        rh_kernel_update, kexec:
                           args_added = "console=tty0 console=ttyS0,115200"
                        variants:
                            - 32:
                                guest_name += -32
                                image_name += -32
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-6-series.ks
                                    #floppy = images/rhel61-32/ks.vfd
                                    cdrom_unattended = images/rhel61-32/ks.iso
                                    kernel = images/rhel61-32/vmlinuz
                                    initrd = images/rhel61-32/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL6.1-Server-i386.iso
                                ipi_x2apic:
                                    check_x2apic_cmd =
                                check_qmp:
                                    kernel_config = http://fileshare.englab.nay.redhat.com/pub/section2/kvm/pub/test_src/config-32
                            - 64:
                                guest_name += -64
                                image_name += -64
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-6-series.ks
                                    #floppy = images/rhel61-64/ks.vfd
                                    cdrom_unattended = images/rhel61-64/ks.iso
                                    kernel = images/rhel61-64/vmlinuz
                                    initrd = images/rhel61-64/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL6.1-Server-x86_64.iso


                    - 6.2:
                        guest_name = RHEL-Server-6.2
                        image_name = RHEL-Server-6.2
                        image_size = 20G
                        brew_tag = RHEL-6.2-Z-candidate
                        nic_hotplug:
                            modprobe_module = ""
                        block_hotplug:
                            modprobe_module = ""
                        acpi_after_hotplug:
                            modprobe_module = ""
                        rh_kernel_update, kexec:
                           args_added = "console=tty0 console=ttyS0,115200"
                        variants:
                            - 32:
                                guest_name += -32
                                image_name += -32
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-6-series.ks
                                    #floppy = images/rhel62-32/ks.vfd
                                    cdrom_unattended = images/rhel62-32/ks.iso
                                    kernel = images/rhel62-32/vmlinuz
                                    initrd = images/rhel62-32/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL6.2-Server-i386.iso
                                ipi_x2apic:
                                    check_x2apic_cmd =
                                check_qmp:
                                    kernel_config = http://fileshare.englab.nay.redhat.com/pub/section2/kvm/pub/test_src/config-32
                            - 64:
                                guest_name += -64
                                image_name += -64
                                unattended_install, check_block_size.4096_512, check_block_size.512_512:
                                    unattended_file = unattended/RHEL-6-series.ks
                                    #floppy = images/rhel62-64/ks.vfd
                                    cdrom_unattended = images/rhel62-64/ks.iso
                                    kernel = images/rhel62-64/vmlinuz
                                    initrd = images/rhel62-64/initrd.img
                                unattended_install.cdrom, check_block_size.4096_512, check_block_size.512_512:
                                    cdrom_cd1 = isos/linux/RHEL6.2-Server-x86_64.iso

                    - 6.3:
                        guest_name = RHEL-Server-6.3
                        image_name = RHEL-Server-6.3
                        image_size = 20G
                        brew_tag = RHEL-6.3-candidate
                        nic_hotplug:
                            modprobe_module = ""
                        block_hotplug:
                            modprobe_module = ""
                        acpi_after_hotplug:
                            modprobe_module = ""
                        rh_kernel_update, kexec:
                            args_added = "console=tty0 console=ttyS0,115200"
                        variants:
                            - 32:
                                guest_name += -32
                                image_name += -32
                                unattended_install:
                                    unattended_file = unattended/RHEL-6-series.ks
                                    #floppy = images/rhel63-32/ks.vfd
                                    cdrom_unattended = images/rhel63-32/ks.iso
                                    kernel = images/rhel63-32/vmlinuz
                                    initrd = images/rhel63-32/initrd.img
                                unattended_install.cdrom:
                                    cdrom_cd1 = isos/linux/RHEL6.3-Server-i386.iso
                            - 64:
                                guest_name += -64
                                image_name += -64
                                unattended_install:
                                    unattended_file = unattended/RHEL-6-series.ks
                                    #floppy = images/rhel63-64/ks.vfd
                                    cdrom_unattended = images/rhel63-64/ks.iso
                                    kernel = images/rhel63-64/vmlinuz
                                    initrd = images/rhel63-64/initrd.img
                                unattended_install.cdrom:
                                    cdrom_cd1 = isos/linux/RHEL6.3-Server-x86_64.iso

    # Windows section
    - @Windows:
        network_query = ipconfig
        shutdown_command = shutdown /s /t 0
        reboot_command = shutdown /r /t 0
        status_test_command = echo %errorlevel%
        shell_prompt = "^\w:\\.*>\s*$"
        shell_linesep = "\r\n"
        username = Administrator
#       password = 123456
        password = 1q2w3eP
        shell_client = nc
        shell_port = 10022
        file_transfer_client = rss
        file_transfer_port = 10023
        redirs += " file_transfer"
        guest_port_remote_shell = 10022
        guest_port_file_transfer = 10023

        try_serial_login = 'no'

        # This ISO will be used for all tests except install:
        cdrom_cd1 = isos/windows/winutils.iso

        cpu_chk_cmd = echo %NUMBER_OF_PROCESSORS%
        mem_chk_cmd = wmic memphysical
        mem_chk_cur_cmd = wmic memphysical

        sockets_chk_cmd = cmd /c D:\coreutils\cpuz.exe --txt=cpuinfo && type cpuinfo.txt|find "Number of processors"
        cores_chk_cmd = cmd /c D:\coreutils\cpuz.exe --txt=cpuinfo && type cpuinfo.txt|find "Number of cores"
        threads_chk_cmd = cmd /c D:\coreutils\cpuz.exe --txt=cpuinfo && type cpuinfo.txt|find "Number of threads"
        get_time_cmd = "cmd /c echo TIME: %date% %time%"
        migration_test_command = dir
        get_nmi_cmd = ::no_cmd
        images_good = 10.66.90.128:/vol/S2/kvmauto/windows_img
        dst_dir = /mnt/windows
        rtc_base = localtime
        # these config are used in virt_test_utils.get_readable_cdroms()
        cdrom_get_cdrom_cmd = "echo list volume > check_cdrom && echo exit >> check_cdrom && diskpart /s check_cdrom"
        cdrom_check_cdrom_pattern = "\d\s+(\w).*CD-ROM"
        cdrom_test_cmd = "dir %s:\"

        unattended_install.cdrom, whql.support_vm_install:
            timeout = 7200
            boot_once = d
            finish_program = deps/finish.bat
            cdroms += " winutils"
            cdrom_winutils = isos/windows/winutils.iso
            kernel =
            initrd =
            # Turn install_virtio = yes if you want to install the
            # Windows virtio drivers. It might be a lot of setup though :)
            install_virtio = yes
            cdroms += " virtio"
            cdrom_virtio = isos/windows/virtio-win.iso
            #virtio_floppy = /usr/share/virtio-win/virtio-drivers.vfd
            virtio_floppy = isos/windows/virtio-win.vfd
            #pre_command += "scripts/private_br.sh notftp;"
            floppy = "images/floppy.img"
            virtio_network_installer_path = 'help'
            cdrom_mount_point = /tmp/mount/
            floppy_mount_point = /tmp/virtio_win/
            re_hardware_id = "(PCI.{14,50})\r{0,}\n"
            # specify which driver is in floppy, this parameter is for windows only
            driver_in_floppy = qxl.inf
            # Used to split dirver link from virtio installer path.  Windows guest only
            re_driver_match = (\S+)\s*hwid
        migrate:
            migration_test_command = ver && vol
            migration_bg_command = start ping -t localhost
            migration_bg_check_command = tasklist | find /I "ping.exe"
            migration_bg_kill_command = taskkill /IM ping.exe /F
        migrate.with_file_transfer, migrate.between_vhost_novhost:
            guest_path = C:\file
            rtl8139:
                file_size = 10
        stress_boot:
            alive_test_cmd = systeminfo
        timedrift:
            #time_command = "echo TIME: %date% %time%"
            time_command = "w32tm /stripchart /samples:1 /computer:ns1.nay.redhat.com"
            #time_filter_re = "(?<=TIME: \w\w\w ).{19}(?=\.\d\d)"
            time_filter_re = "\d+/\d+/\d+\s\d+:\d+:\d+ [AP]M"
            time_format = "%m/%d/%Y %H:%M:%S"
            # For this to work, the cdrom at d: should contain vlc (d:\vlc\vlc.exe) and a video (d:\ED_1024.avi)
            guest_load_command = 'cmd /c "d:\vlc\vlc -f --loop --no-qt-privacy-ask --no-qt-system-tray d:\ED_1024.avi"'
            # Alternative guest load:
            #guest_load_command = "(dir /s && dir /s && dir /s && dir /s) > nul"
            guest_load_stop_command = "taskkill /F /IM vlc.exe"
            guest_load_instances = 2
            host_load_command = "bzip2 -c --best /dev/urandom > /dev/null"
            # Alternative host load:
            #host_load_command = "dd if=/dev/urandom of=/dev/null"
            host_load_instances = 8
            monotonicity:
                cmd_get_time = "echo %TIME%"
        guest_s3, acpi_after_hotplug.acpi_guest_s3, balloon_check.enable.balloon-guest_s3:
            display = spice
            check_s3_support_cmd = wevtutil cl system && powercfg /h off  && powercfg -a | findstr /I /C:"The following sleep states are available on this system: Standby ( S3 )"
            set_s3_cmd = "rundll32.exe PowrProf.dll,SetSuspendState 0,1,0"
            bg_cmd = start /B ping -t localhost
            check_s3_cmd = wevtutil qe system /f:text  | findstr /I /C:"The system has resumed from sleep" /C:"The system is entering sleep"
            check_bg_cmd =  tasklist | findstr /I /C:"ping.exe"
            kill_bg_cmd = taskkill /IM ping.exe /F
        guest_s4, acpi_after_hotpulg.acpi_guest_s4, balloon_check.enable.balloon-guest_s4:
            check_s4_support_cmd = wevtutil cl system && powercfg -h on
            bg_cmd = start /B ping /t localhost
            check_bg_cmd = tasklist | findstr /I /C:"ping.exe"
            set_s4_cmd = rundll32.exe PowrProf.dll,SetSuspendState
            check_s4_cmd = wevtutil qe system /f:text | findstr /I /C:"The system has resumed from sleep" /C:"The system is entering sleep"
            kill_bg_cmd = taskkill /IM ping.exe /F
        network_ping:
            interface_status_cmd = ipconfig /all
        nic_hotplug:
            modprobe_acpiphp = no
            reference_cmd = systeminfo
            find_pci_cmd = ipconfig /all | find "Description"
            seconds_wait_for_device_install = 10
            nic_virtio:
                match_string = "Red Hat VirtIO Ethernet Adapter"
            nic_e1000:
                match_string = "Intel(R) PRO/1000 MT Network Connection"
        block_hotplug:
            modprobe_acpiphp = no
            reference_cmd = wmic diskdrive list brief
            find_pci_cmd = wmic diskdrive list brief
            seconds_wait_for_device_install = 10
            pci_test_cmd = echo select disk %s > dt && echo detail disk >> dt && echo exit >> dt && diskpart /s dt
            block_virtio:
                match_string = "VirtIO SCSI Disk Device"
        format_disk:
            create_partition_cmd = "echo select disk 1 > cmd && echo create partition primary >> cmd && echo select partition 1 >> cmd && echo assign letter=I >> cmd && echo exit >> cmd && diskpart /s cmd"
            format_cmd = format I: /FS:NTFS /V:local /Q /y
            list_disk_cmd = "echo list disk>  cmd&&  echo exit>>  cmd&& diskpart /s cmd"
            set_online_cmd = " echo select disk %s >  cmd&&echo online disk >>  cmd&&  echo att disk clear readonly >>  cmd &&  echo exit >>  cmd&& diskpart /s cmd"
            testfile_name = I:\\txt.txt
            readfile_cmd = type
        physical_resources_check:
            vms= "vm1"
            catch_serial_cmd =
            check_machine_type_cmd = "wmic csproduct get Version"
        file_transfer:
            tmp_dir = C:\
            clean_cmd = del
        vmstop:
            guest_path = C:\
        multi_disk:
            shell_port = 23
            shell_client = telnet
            post_cmd = del c:\cmd.exe
            file_system = "ntfs fat32"
            cmd_list = "copy_to_command copy_from_command"
            list_volume_command = wmic volume get driveletter
            re_str = "([A-Z]:)"
            format_command = format /fs:%s %s /q /y
            copy_to_command = copy C:\WINDOWS\system32\cmd.exe %s /y
            copy_from_command = copy %s\cmd.exe c:\ /y
            compare_command = fc /b c:\windows\system32\cmd.exe c:\cmd.exe
            check_result_key_word = no difference
            default:
                pre_cmd = del diskpart.script && (for %i in (1 2 3) do echo select disk %i >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script
            max_disk:
                pre_cmd = del diskpart.script && (for /L %i in (1 1 24) do echo select disk %i >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo exit >> diskpart.script && diskpart /s diskpart.script
        usb_multi_disk:
            shell_port = 23
            shell_client = telnet
            post_cmd = del c:\cmd.exe
            file_system = "ntfs fat32"
            cmd_list = "copy_to_command copy_from_command"
            list_volume_command = wmic volume get driveletter
            re_str = "([A-Z]:)"
            format_command = format /fs:%s %s /q /y
            copy_to_command = copy C:\WINDOWS\system32\cmd.exe %s /y
            copy_from_command = copy %s\cmd.exe c:\ /y
            compare_command = fc /b c:\windows\system32\cmd.exe c:\cmd.exe
            check_result_key_word = no difference
            default:
                pre_cmd = del diskpart.script && (for %i in (1 2 3) do echo select disk %i >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script
            max_disk:
                pre_cmd = del diskpart.script && (for /L %i in (1 1 24) do echo select disk %i >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo exit >> diskpart.script && diskpart /s diskpart.script
        floppy_test:
            format_floppy_cmd = echo n|format A: /Q /V:test_floppy
            source_file = C:\Windows\System32\cmd.exe
            dest_file = A:\cmd.exe
            clean_cmd = del
            diff_file_cmd = fc
            test_floppy_cmd = "chkdsk A:"
            copy_cmd = copy
        readonly_floppy:
            sleep = True
            format_floppy0_cmd = echo n|format A: /Q /V:test_floppy
            format_floppy1_cmd = echo n|format B: /Q /V:test_floppy
        iozone_windows:
            cdrom_cd1 = isos/windows/winutils.iso
            iozone_cmd = "D:\iozone\iozone -azR -r 64k -n 1G -g 4G -M -b iozone.xls -f c:\testfile"
            iozone_timeout = 7200
            mem = 2048
        qemu_disk_img:
            check_file_cmd = "D:\coreutils\md5sum.exe"
            create_file_cmd = "D:\coreutils\DummyCMD.exe %s %s 1"
            file_base = "C:\file_base"
            file_sn1 = "C:\file_sn1"
            file_sn2 = "C:\file_sn2"
            file_sn3 = "C:\file_sn3"
            file_sn4 = "C:\file_sn4"
            file_size = 1073741824
            clean_cmd = del
        live_snapshot:
            create_cmd = "D:\coreutils\DummyCMD.exe %s 1073741824 1"
            file_create = "C:\file_create"
            clean_cmd = del
            - with_file_transfer:
                tmp_dir = C:\
        iometer_windows:
            create_partition_cmd = "echo select disk 1 > imDiskpart.script && echo create partition primary >> imDiskpart.script && echo assign letter=E >> imDiskpart.script && echo exit >> imDiskpart.script && diskpart /s imDiskpart.script"
            format_cmd = format E: /FS:NTFS /V:local /Q /y
            cdrom_cd1 = isos/windows/winutils.iso
            iometer_installation_cmd = "cmd /c D:\autoit3.exe D:\Iometer\iometer.au3"
            iometer_reg = "cmd /c D:\autoit3.exe D:\Iometer\iometer-reg.au3"
            iometer_run = "cmd /c C:\Iometer\Iometer.exe /c D:\Iometer\iometer.icf /r C:\autotest_iometer_result.csv"
            iometer_timeout = 1000
            guest_path = "C:\autotest_iometer_result.csv"
            host_path = "debug/autotest_iometer_result_%s_%s.csv"
        iometer_performance:
            create_partition_cmd = "echo select disk 1 > imDiskpart.script && echo create partition primary >> imDiskpart.script && echo assign letter=E >> imDiskpart.script && echo exit >> imDiskpart.script && diskpart /s imDiskpart.script"
            format_cmd = format E: /FS:NTFS /V:local /Q /y
            cdrom_cd1 = isos/windows/winutils.iso
            iometer_installation_cmd = "cmd /c D:\autoit3.exe D:\Iometer\iometer.au3"
            iometer_reg = "cmd /c D:\autoit3.exe D:\Iometer\iometer-reg.au3"
            iometer_run = "cmd /c C:\Iometer\Iometer.exe /c D:\Iometer\iometer-block-2-256-queue-1-128-E.icf /r C:\autotest_iometer_result.csv"
            iometer_timeout = 23400
            guest_path = "C:\autotest_iometer_result.csv"
            host_path = "debug/autotest_iometer_result_%s_%s.csv"
        sysprep:
            shell_client = telnet
            shell_port = 23
            guest_port_remote_shell = 23
        qemu_img.commit:
            file_create_cmd = "cmd /c echo.> C:\commit_testfile"
            file_info_cmd = "cmd /c dir C:\commit_testfile"
            file_exist_chk_cmd = "cmd /c if exist C:\commit_testfile (echo file exist)"
            file_not_exist_chk_cmd = "cmd /c if not exist C:\commit_testfile (echo file is not exist)"
            file_del_cmd = "cmd /c del /Q C:\commit_testfile"
        64:
            guest_test.autoit.cpu_bench:
                dst_rsc_path = "C:\CpuBench\7zipbench_64.au3"
            guest_test.autoit.web_bench.run:
                dst_rsc_path = "C:\webBench\runBench_64.bat"
            guest_test.autoit.sandra.run:
                dst_rsc_path = "C:\sandra\run_sandra_64.au3"

        live_snapshot_chain:
            md5_cmd = "cd C:\test && D:\coreutils\md5sum.exe %s"
            file_create_cmd = "D:\coreutils\DummyCMD.exe C:\test\%s 1048576 1" 
            file_dir = "C:\test"
            dir_create_cmd = "mkdir %s; dir"
            file_check_cmd = "dir %s"
            check_alive_cmd = "dir"
        live_snapshot_chain.update:
            post_snapshot_cmd = {shell:D:\whql\WUInstall.exe /install}
        live_snapshot_chain.oops:
            post_snapshot_cmd = {monitor:nmi 0}

        variants:
            - WinXP:
                guest_name = WinXP
                image_name = winXP
                guest_s3:
                    check_s3_cmd = echo "since WinXP / Win2003 doesn't record ACPI event,so there's nothing to do"
                    check_s3_support_cmd = powercfg /h off  && powercfg -a | findstr /I /C:"The following sleep states are available on this system: Standby ( S3 )"
                guest_s4:
                    check_s4_cmd = echo "since WinXP / Win2003 doesn't record ACPI event,so there's nothing to do"
                    check_s4_support_cmd = powercfg -h on

                variants:
                    - 32:
                        image_name += -32
                        guest_name += -32
                        install:
                            cdrom_cd1 = isos/windows/WindowsXP-sp2-vlk.iso
                            md5sum_cd1 = 743450644b1d9fe97b3cf379e22dceb0
                            md5sum_1m_cd1 = b473bf75af2d1269fec8958cf0202bfd
                            user = user
                            steps = steps/WinXP-32.steps
                        setup:
                            steps = steps/WinXP-32-rss.steps
                        unattended_install.cdrom, whql.support_vm_install:
                            cdrom_cd1 = isos/ISO/WinXP/32/en_windows_xp_professional_with_service_pack_3_x86_cd_x14-80428.iso
                            unattended_file = unattended/winxp32.sif
                            floppy = images/winXP-32/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_oemsetup_id = WXP32
                            virtio_network_path = 'F:\NetKVM\xp\x86'
                            virtio_network_installer_path = E:\\AutoIt3.exe E:\\virtio_driver_install.au3 E:\devcon\wlh_x86\devcon.exe ' install F:\\NetKVM\\xp\\x86\\netkvm.inf hwidcmd '
                            virtio_qxl_installer_path = E:\\AutoIt3.exe E:\\virtio_driver_install.au3 E:\devcon\wlh_x86\devcon.exe ' install A:\\i386\\WinXP\\qxl.inf hwidcmd '
                            virtio_balloon_installer_path = E:\\AutoIt3.exe E:\\virtio_driver_install.au3 E:\devcon\wlh_x86\devcon.exe ' install F:\\Balloon\\2k3\\x86\\balloon.inf hwidcmd '
                        whql.submission:
                            desc_path_desc1 = $\WDK\Logo Type\Device Logo\Windows XP
                            desc_path_desc2 = $\WDK\Logo Type\Systems Logo\Windows XP
                            dd_data_logoarch = X86
                            dd_data_logoos = Windows XP
                            dd_data_whqlos = Windows XP
                            device:
                                dd_data_whqlqual = Basic
                            device.net:
                                image_name_supportvm = winXP-32-supportvm
                        multi_disk, usb_multi_disk:
                            list_volume_command = fsutil fsinfo drives
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c I:\\AutoIt3_x64.exe I:\\virtio_driver_install.au3 pnputil "-i -a K:\\Balloon\\2k8\\amd64\\Balloon.inf"
                            driver_install_cmd_block = cmd /c I:\\AutoIt3_x64.exe I:\\virtio_driver_install.au3 I:\devcon\wlh_x86\devcon.exe ' install K:\\viostor\\xp\\x86\\viostor.inf hwidcmd '
                            driver_install_cmd_nic = cmd /c I:\\AutoIt3.exe I:\\virtio_driver_install.au3 I:\devcon\wlh_x86\devcon.exe ' install K:\\NetKVM\\xp\\x86\\netkvm.inf hwidcmd '
                        live_snapshot_chain.update:
                            post_snapshot_cmd = {shell:cmd /c D:\wua_update.exe && cmd /c net stop wuauserv && cmd /c net start wuauserv && D:\whql\WUInstall.exe /install}


            - Win2003:
                guest_name = Win2003
                image_name = win2003
                image_size = 30G
                shutdown_command = shutdown /s /f /t 0
                reboot_command = shutdown /r /f /t 0
                block_hotplug, format_disk, multi_disk, usb_multi_disk, physical_resources_check, iometer_windows, iometer_performance:
                    shell_port = 23
                    shell_client = telnet
                guest_s3:
                    check_s3_cmd = echo "since WinXP / Win2003 doesn't record ACPI event,so there's nothing to do"
                    check_s3_support_cmd = powercfg /h off  && powercfg -a | findstr /I /C:"The following sleep states are available on this system: Standby ( S3 )"
                guest_s4:
                    check_s4_cmd = echo "since WinXP / Win2003 doesn't record ACPI event,so there's nothing to do"
                    check_s4_support_cmd = powercfg -h on

                variants:
                    - 32:
                        image_name += -32
                        guest_name += -32
                        install:
                            steps = steps/Win2003-32.steps
                            cdrom_cd1 = windows/Windows2003-32.iso
                            md5sum_cd1 = 05e1ec9e40fca4ea5ffc940f22869b38
                            md5sum_1m_cd1 = b1671ecf47a270e49e04982bf1474ff9
                            user = user
                        setup:
                            steps = steps/Win2003-32-setupssh.steps
                            cdrom_cd1 = windows/setupssh.iso
                        sysprep:
                            unattended_file = win2003-32.sif
                        unattended_install.cdrom:
                            cdrom_cd1 = isos/ISO/Win2003/32/en_win_srv_2003_r2_enterprise_with_sp2_X13.iso
                            unattended_file = unattended/win2003-32.sif
                            floppy = images/win2003-32/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_oemsetup_id = WNET32
                            virtio_network_path = 'F:\NetKVM\2k3\x86'
                            #virtio_network_installer_path = 'F:\RHEV-Network.msi'
                            virtio_network_installer_path = E:\devcon\wlh_x86\devcon.exe install F:\\NetKVM\\2k3\\x86\\netkvm.inf hwidcmd
                            virtio_qxl_installer_path = E:\\AutoIt3.exe E:\\virtio_driver_install.au3 E:\devcon\wlh_x86\devcon.exe ' install A:\\i386\\WinXP\\qxl.inf hwidcmd '
                            virtio_balloon_installer_path = E:\\AutoIt3.exe E:\\virtio_driver_install.au3 E:\devcon\wlh_x86\devcon.exe ' install F:\\Balloon\\2k3\\x86\\balloon.inf hwidcmd '
                        whql.submission:
                            desc_path_desc1 = $\WDK\Logo Type\Device Logo\Windows Server 2003
                            dd_data_logoarch = X86
                            dd_data_logoos = Windows Server 2003
                            dd_data_whqlos = Windows Server 2003
                            dd_data_whqlqual = Basic
                            device:
                                dd_data_whqlqual = Basic
                            device.net:
                                image_name_supportvm = win2003-32-supportvm
                        iometer_windows:
                            create_partition_cmd = "echo select disk 1 > imDiskpart.script && echo convert dynamic >> imDiskpart.script && echo create      volume simple >> imDiskpart.script && echo assign letter=E >> imDiskpart.script && echo exit >> imDiskpart.script && diskpart /s imDiskpart.script
                        whql_env_setup:
                            cdrom_whql = images/win2k3-32/whql.iso
                            mem = 2048
                            update_cmd = cmd /c D:\whql\WUInstall.exe /install /criteria "IsHidden=0 and IsInstalled=0 and IsAssigned=1"
                        whql_env_setup.block_device:
                            symbol_files = "git://qe-git.englab.nay.redhat.com/whql/win2k3_32"
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c E:\\whql\virtio_driver_install_whql.exe F:\\Balloon\\2k3\\x86 balloon
                            driver_install_cmd_block = cmd /c  E:\\whql\virtio_driver_install_whql.exe F:\\viostor\\2k3\\x86 block
                            driver_install_cmd_nic = cmd /c E:\\whql\virtio_driver_install_whql.exe F:\\\NetKVM\\2k3\\x86 nic

                    - 64:
                        guest_name += -64
                        image_name += -64
                        install:
                            steps = Win2003-64.steps
                            cdrom_cd1 = windows/Windows2003-x64.iso
                            md5sum_cd1 = 55842809280f1860a5d3b54f779572f4
                            md5sum_1m_cd1 = c11ebcf6c128d94c83fe623566eb29d7
                            user = user
                        setup:
                            steps = steps/Win2003-64-rss.steps
                        unattended_install.cdrom, whql.support_vm_install:
                            cdrom_cd1 = isos/ISO/Win2003/64/en_win_srv_2003_r2_enterprise_x64_with_sp2_X13.iso
                            unattended_file = unattended/win2003-64.sif
                            floppy = images/win2003-64/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_oemsetup_id = WNET64
                            virtio_network_path = 'F:\NetKVM\2k3\amd64'
                            #virtio_network_installer_path = 'F:\RHEV-Network64.msi'
                            virtio_network_installer_path = 'E:\devcon\wlh_amd64\devcon.exe install F:\\NetKVM\\2k3\\amd64\\netkvm.inf hwidcmd'
                            virtio_qxl_installer_path = E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 E:\devcon\wlh_amd64\devcon.exe ' install A:\\amd64\\Win7\\qxl.inf hwidcmd '
                            virtio_balloon_installer_path = E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 E:\devcon\wlh_amd64\devcon.exe ' install F:\\Balloon\\2k3\\amd64\\balloon.inf hwidcmd '
                        whql.submission:
                            desc_path_desc1 = $\WDK\Logo Type\Device Logo\Windows Server 2003
                            dd_data_logoarch = AMD64
                            dd_data_logoos = Windows Server 2003
                            dd_data_whqlos = Windows Server 2003 x64
                            dd_data_whqlqual = Basic
                            device:
                                dd_data_whqlqual = Basic
                            device.net:
                                image_name_supportvm = win2003-64-supportvm
                        sysprep:
                            unattended_file = win2003-64.sif
                        whql_env_setup:
                            cdrom_whql = images/win2k3-64/whql.iso
                            mem = 2048
                            update_cmd = cmd /c D:\whql\WUInstall.exe /install /criteria "IsHidden=0 and IsInstalled=0 and IsAssigned=1"
                        whql_env_setup.block_device:
                            symbol_files = "git://qe-git.englab.nay.redhat.com/whql/win2k3_64"
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c E:\\whql\virtio_driver_install_whql.exe F:\\Balloon\\2k3\\amd64 balloon
                            driver_install_cmd_block = cmd /c  E:\\whql\virtio_driver_install_whql.exe F:\\viostor\\2k3\\amd64 block
                            driver_install_cmd_nic = cmd /c E:\\whql\virtio_driver_install_whql.exe F:\\\NetKVM\\2k3\\amd64 nic

            - Win2008:
                image_name = win2008
                guest_name = Win2008
                image_size = 30G
                shutdown_command = shutdown /s /f /t 0
                reboot_command = shutdown /r /f /t 0
                guest_test.autoit.disk_dfrg:
                    dst_rsc_path = "C:\DiskDefragment\difrag2008.au3"

                variants:
                    - 32:
                        image_name += -32
                        guest_name += -32
                        install:
                            steps = Win2008-32.steps
                            cdrom_cd1 = windows/Windows2008-x86.iso
                            #en_windows_server_2008_datacenter_enterprise_standard_x86_dvd_X14-26710.iso
                            #sha1sum = 6CA018FF96F1E9B2B310A36546B6FDED99A421E6
                            md5sum_cd1 = b9201aeb6eef04a3c573d036a8780bdf
                            md5sum_1m_cd1 = b7a9d42e55ea1e85105a3a6ad4da8e04
                        setup:
                            steps = Win2008-32-setuptelnet.steps
                            cdrom_cd1 = windows/setuptelnet.iso
                        unattended_install.cdrom:
                            cdrom_cd1 = isos/ISO/Win2008/32/en_windows_server_2008_datacenter_enterprise_standard_sp2_x86_dvd_342333.iso
                            unattended_file = unattended/win2008-32-autounattend.xml
                            floppy = images/win2008-sp2-32/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_storage_path = 'F:\viostor\2k8\x86'
                            virtio_network_path = 'F:\NetKVM\2k8\x86'
                            #virtio_network_installer_path = 'F:\RHEV-Network.msi'
                            #virtio_qxl_installer_path = E:\\autoit3.exe E:\\qxl_install.au3 pnptuil " -i -a A:\\amd64\\Win7\\qxl.inf"
                            #virtio_balloon_installer_path = pnputil -i -a F:\\Balloon\\2k8\\x86\\balloon.inf
                            virtio_qxl_installer_path = E:\\autoit3.exe E:\\virtio_driver_install.au3 E:\devcon\wnet_x86\devcon.exe " install A:\\i386\\Win7\\qxl.inf hwid"
                            virtio_balloon_installer_path = E:\\autoit3.exe E:\\virtio_driver_install.au3 E:\devcon\wnet_x86\devcon.exe " install F:\\Balloon\\2k8\\x86\\balloon.inf hwidcmd"
                            virtio_blk,virtio_net:
                                unattended_file = unattended/win2008-32-virtio-autounattend.xml
                        sysprep:
                            unattended_file = win2008-32-autounattend.xml
                        whql_env_setup:
                            timezone_cmd = "tzchange /C "China Standard Time""
                            cdrom_whql = images/win2k8-32/whql.iso
                            mem = 6144
                            update_cmd = cmd /c D:\whql\WUInstall.exe /install /criteria "IsHidden=0 and IsInstalled=0 and IsAssigned=1"
                        whql_env_setup.block_device:
                            symbol_files = "git://qe-git.englab.nay.redhat.com/whql/win2k8_32"
                            disk_driver_install = ""
                        whql_env_setup.nic_device:
                            nic_model_nic1 = e1000
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\Balloon\\2k8\\x86\\Balloon.inf"
                            driver_install_cmd_block = cmd /c E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\viostor\\2k8\\x86\\viostor.inf"
                            driver_install_cmd_nic = cmd /c E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\NetKVM\\2k8\\x86\\netkvm.inf"

                    - 64:
                        image_name += -64
                        guest_name += -64
                        install:
                            steps = Win2008-64.steps
                            cdrom_cd1 = windows/Windows2008-x64.iso
                            #en_windows_server_2008_datacenter_enterprise_standard_x64_dvd_X14-26714.iso
                            #sha1sum = BD000374709F67E9358814DB6EC8F0DDAAA16F70
                            md5sum_cd1 = e94943ef484035b3288d8db69599a6b5
                            md5sum_1m_cd1 = ee55506823d0efffb5532ddd88a8e47b
                            passwd = 1q2w3eP
                        setup:
                            steps = Win2008-32-setuptelnet.steps
                            cdrom_cd1 = windows/setuptelnet.iso
                        unattended_install.cdrom:
                            cdrom_cd1 = isos/ISO/Win2008/64/en_windows_server_2008_datacenter_enterprise_standard_sp2_x64_dvd_342336.iso
                            unattended_file = unattended/win2008-64-autounattend.xml
                            floppy = images/win2008-sp2-64/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_storage_path = 'F:\viostor\2k8\amd64'
                            virtio_network_path = 'F:\NetKVM\2k8\amd64'
                            #virtio_network_installer_path = 'F:\RHEV-Network64.msi'
                            # virtio_qxl_installer_path = E:\\autoit3.exe E:\\qxl_install.au3 E:\devcon\wnet_amd64\devcon.exe "install A:\\amd64\\Win7\\qxl.inf hwid"
                            virtio_qxl_installer_path = E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 pnputil " -i -a A:\\amd64\\Win7\\qxl.inf"
                            virtio_balloon_installer_path = E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 pnputil pnputil " -i -a F:\\Balloon\\2k8\\amd64\\balloon.inf"
                            # virtio_balloon_installer_path = E:\devcon\wnet_amd64\devcon.exe install F:\\Balloon\\2k8\\amd64\\balloon.inf hwidcmd
                            virtio_blk, virtio_net:
                                unattended_file = unattended/win2008-64-virtio-autounattend.xml
                        sysprep:
                            unattended_file = win2008-64-autounattend.xml
                        whql_env_setup:
                            timezone_cmd = "tzchange /C "China Standard Time""
                            cdrom_whql = images/win2k8-64/whql.iso
                            mem = 6144
                            update_cmd = cmd /c D:\whql\WUInstall.exe /install /criteria "IsHidden=0 and IsInstalled=0 and IsAssigned=1"
                        whql_env_setup.block_device:
                            symbol_files = "git://qe-git.englab.nay.redhat.com/whql/win2k8_64"
                            disk_driver_install =  ""
                        whql_env_setup.nic_device:
                            nic_model_nic1 = e1000
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\Balloon\\2k8\\amd64\\Balloon.inf"
                            driver_install_cmd_block = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\viostor\\2k8\\amd64\\viostor.inf"
                            driver_install_cmd_nic = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\NetKVM\\2k8\\amd64\\netkvm.inf"

            - Win2008r2:
                image_name = win2008r2
                guest_name = Win2008r2
                image_size = 30G
                shutdown_command = shutdown /s /f /t 0
                reboot_command = shutdown /r /f /t 0
                guest_test.autoit.disk_dfrg:
                    dst_rsc_path = "C:\DiskDefragment\difrag2008.au3"
                format_disk:
                    create_partition_cmd = "echo select disk 1 > cmd && echo create partition primary >> cmd && echo select partition 1 >> cmd && echo format fs=ntfs quick >> cmd && echo assign letter=I >> cmd && echo exit >> cmd && diskpart /s cmd"
                    format_cmd = format I: /FS:NTFS /V:local /y
                    testfile_name = I:\\txt.txt
                    cmd_timeout = 3000
                multi_disk, usb_multi_disk:
                    default:
                        pre_cmd = del diskpart.script && (for %i in (1 2 3) do echo select disk %i >> diskpart.script && echo attributes disk clear readonly >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script
                    max_disk:
                        pre_cmd = del diskpart.script && for /L %i in (1 1 24) do (echo select disk %i >> diskpart.script && echo online disk >> diskpart.script && echo attributes disk clear readonly >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script

                iozone_windows:
                    iozone_cmd = "E:\iozone\iozone -azR -r 64k -n 1G -g 4G -M -b iozone.xls -f c:\testfile"
                variants:
                    - 64:
                        image_name += -64
                        guest_name += -64
                        unattended_install.cdrom:
                            cdrom_cd1 = isos/ISO/Win2008R2/en_windows_server_2008_r2_standard_enterprise_datacenter_and_web_with_sp1_x64_dvd_617601.iso
                            md5sum_cd1 = 8dcde01d0da526100869e2457aafb7ca
                            md5sum_1m_cd1 = 1588cccf7e4ed868e1369b88fcb5e87e
                            sha1sum_cd1 = d3fd7bf85ee1d5bdd72de5b2c69a7b470733cd0a
                            sha1sum_1m_cd1 = 9194a3aabae25b36e5f73cad001314b2c8d07d14
                            unattended_file = unattended/win2008-r2-autounattend.xml
                            floppy = images/win2008-r2-64/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_storage_path = 'F:\viostor\2k8\amd64'
                            virtio_network_path = 'F:\NetKVM\2k8\amd64'
                            #virtio_network_installer_path = 'F:\RHEV-Network64.msi'
                            virtio_qxl_installer_path =E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 pnputil"  -i -a A:\\amd64\\Win7\\qxl.inf"
                            virtio_balloon_installer_path =E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 pnputil " -i -a F:\\Balloon\\2k8\\amd64\\balloon.inf"
                            unattended_file = unattended/win2008-r2-autounattend.xml
                            virtio_blk, virtio_net:
                                unattended_file = unattended/win2008-r2-virtio-autounattend.xml
                        sysprep:
                            unattended_file = win2008-r2-autounattend.xml
                        whql_env_setup:
                            smp = 2
                            timezone_cmd = "tzchange /C "China Standard Time""
                            cdrom_whql = images/win2k8r2-64/whql.iso
                            mem = 6144
                            update_cmd = cmd /c D:\whql\WUInstall.exe /install /criteria "IsHidden=0 and IsInstalled=0 and IsAssigned=1"
                        whql_env_setup.block_device:
                            symbol_files = "git://qe-git.englab.nay.redhat.com/whql/win2k8r2_64"
                            disk_driver_install = ""
                        whql_env_setup.nic_device:
                            nic_model_nic1 = e1000
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\Balloon\\2k8\\amd64\\Balloon.inf"
                            driver_install_cmd_block = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\viostor\\2k8\\amd64\\viostor.inf"
                            driver_install_cmd_nic = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\NetKVM\\2k8\\amd64\\netkvm.inf"


            - Win7:
                guest_name = Win7
                image_name = win7
                image_size = 30G
                shutdown_command = shutdown /s /f /t 0
                reboot_command = shutdown /r /f /t 0
                guest_test.autoit.disk_dfrg:
                    dst_rsc_path = "C:\DiskDefragment\difrag_win7.au3"
                whql.submission:
                    desc_path_desc1 = $\WDK\Logo Type\Device Logo\Windows 7 Client\Logo
                    desc_path_desc2 = $\WDK\Logo Type\Device Logo\Windows 7 Client
                    device_data += " adq"
                    dd_name_adq = AdditionalQualificationGroup
                    dd_data_adq = Windows 7

                variants:
                    - 32:
                        guest_name += -32
                        image_name += -32
                        unattended_install.cdrom, whql.support_vm_install:
                            cdrom_cd1 = isos/ISO/Windows7/en_windows_7_ultimate_with_sp1_x86_dvd_619077.iso
                            md5sum_cd1 = 24f3a45d43d7c532aa3126cc094c61bd
                            md5sum_1m_cd1 = 01728cbbc6c4d8f25a82c1028093dc5f
                            unattended_file = unattended/win7-32-autounattend.xml
                            floppy = images/win7-32/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_storage_path = 'F:\viostor\w7\x86'
                            virtio_network_path = 'F:\NetKVM\w7\x86'
                            #virtio_network_installer_path = 'F:\RHEV-Network32.msi'
                            virtio_qxl_installer_path = E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil " -i -a A:\\i386\\Win7\\qxl.inf"
                            virtio_balloon_installer_path = E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil " -i -a F:\\Balloon\\w7\\x86\\balloon.inf"
                        whql.submission:
                            dd_data_logoarch = X86
                            dd_data_logoos = Windows 7
                            dd_data_whqlos = Windows 7 Client
                            dd_data_whqlqual = Logo
                            device:
                                dd_data_whqlqual = Logo
                            device.net:
                                image_name_supportvm = win7-32-supportvm
                        sysprep:
                            unattended_file = win7-32-autounattend.xml
                        whql_env_setup:
                            smp = 2
                            timezone_cmd = "tzchange /C "China Standard Time""
                            cdrom_whql = images/win7-32/whql.iso
                            mem = 2048
                            update_cmd = cmd /c D:\whql\WUInstall.exe /install /criteria "IsHidden=0 and IsInstalled=0 and IsAssigned=1"
                        whql_env_setup.block_device:
                            symbol_files = "git://qe-git.englab.nay.redhat.com/whql/win7_32"
                            disk_driver_install = "" 
                        whql_env_setup.nic_device:
                            nic_model_nic1 = e1000
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\Balloon\\w7\\x86\\Balloon.inf"
                            driver_install_cmd_block = cmd /c E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\viostor\\w7\\x86\\viostor.inf"
                            driver_install_cmd_nic = cmd /c E:\\AutoIt3.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\NetKVM\\w7\\x86\\netkvm.inf"

                    - 64:
                        guest_name += -64
                        image_name += -64
                        install:
                            cdrom_cd1 = isos/windows/en_windows_7_ultimate_x64_dvd_x15-65922.iso
                            md5sum = f43d22e4fb07bf617d573acd8785c028
                            md5sum_1m = b44d8cf99dbed2a5cb02765db8dfd48f
                            passwd = 1q2w3eP
                            steps = steps/Win7-64.steps
                        setup:
                            steps = steps/Win7-64-rss.steps
                        unattended_install.cdrom, whql.support_vm_install:
                            cdrom_cd1 = isos/ISO/Windows7/en_windows_7_ultimate_with_sp1_x64_dvd_618240.iso
                            md5sum_cd1 = 56a26636ec667799f5a7f42f142c772d
                            md5sum_1m_cd1 = a0fa6e40d54fe88d30c43bea3e4d9a0b
                            unattended_file = unattended/win7-64-autounattend.xml
                            floppy = images/win7-64/answer.vfd
                            # Uncomment virtio_network_installer_path line if
                            # you have an msi installer, also make sure the
                            # paths are properly set in your virtio driver iso.
                            virtio_storage_path = 'F:\viostor\w7\amd64'
                            virtio_network_path = 'F:\NetKVM\w7\amd64'
                            #virtio_network_installer_path = 'F:\RHEV-Network64.msi'
                            virtio_qxl_installer_path = E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 pnputil " -i -a A:\\amd64\\Win7\\qxl.inf"
                            virtio_balloon_installer_path =E:\\AutoIt3_x64.exe E:\\virtio_driver_install.au3 pnputil " -i -a F:\\Balloon\\w7\\amd64\\balloon.inf"
                        whql.submission:
                            dd_data_logoarch = AMD64
                            dd_data_logoos = Windows 7
                            dd_data_whqlos = Windows 7 Client x64
                            dd_data_whqlqual = Logo
                            device:
                                dd_data_whqlqual = Logo
                            device.net:
                                image_name_supportvm = win7-64-supportvm
                        sysprep:
                            unattended_file = win7-64-autounattend.xml
                        whql_env_setup:
                            smp = 2
                            timezone_cmd = "tzchange /C "China Standard Time""
                            cdrom_whql = images/win7-64/whql.iso
                            mem = 2048
                            update_cmd = cmd /c D:\whql\WUInstall.exe /install /criteria "IsHidden=0 and IsInstalled=0 and IsAssigned=1"
                        whql_env_setup.block_device:
                            symbol_files = "git://qe-git.englab.nay.redhat.com/whql/win7_64"
                            disk_driver_install = ""
                        whql_env_setup.nic_device:
                            nic_model_nic1 = e1000
                        win_virtio_update:
                            driver_install_cmd_balloon = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\Balloon\\w7\\amd64\\Balloon.inf"
                            driver_install_cmd_block = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\viostor\\w7\\amd64\\viostor.inf"
                            driver_install_cmd_nic = cmd /c E:\\AutoIt3_64.exe E:\\virtio_driver_install.au3 pnputil "-i -a F:\\NetKVM\\w7\\amd64\\netkvm.inf"




    # Live CD section
    - @livecd:
        variants:
            - memtest:
                variants:
                    - 64:
                        only fast_install img_clean mig2.noload
                        image_name = memtest
                        cdrom_cd1 = misc/memtest86+-2.11.iso
                        md5sum_cd1 = ad7de4f1fec06c34b83106c8e7ee0177
                        boot_once = d
                            mig2:
                                vm_login = no
