- multi_queues_test: install setup image_copy unattended_install.cdrom
    virt_test_type = qemu libvirt
    no smp2
    only Linux
    type = multi_queues_test
    queues = 4
    enable_msix_vectors = yes
    tmp_dir = /home
    vhost = "vhost=on"
    instance = 2
    variants:
        - with_netperf:
            #Set "vm_as_server = no", main vm as a netperf client
            vm_as_server = no
            wait_bg_time = 60
            bg_sub_test = netperf_stress
            bg_stress_run_flag = netperf_run
            hostpasswd = redhat
            netperf_download_link = ftp://ftp.netperf.org/netperf/netperf-2.6.0.tar.bz2
            server_path = /tmp/netperf-2.6.0.tar.bz2
            client_path = /tmp/netperf-2.6.0.tar.bz2
            pkg_md5sum = 9654ffdfd4c4f2c93ce3733cd9ed9236
            netperf_test_timeout = 360
            netperf_para_sessions = 2
            test_protocol = TCP_STREAM
            Windows:
                server_download_link = "c:\\netserver-2.6.0.exe"
                server_md5sum = 8f107e9df4f501d20cf46cccc426f4a9
                server_path = "c:\\netserver.exe"
            variants:
                - smp1:
                    smp = 1
                - smpN:
                    smp = 4
                - max_queues:
                    queues = 8
                    smp = 8
                - cpu_affinity:
                    #this test smp must equal queues.
                    smp = 4
                    queues = 4
                    instance = 1
                    netperf_para_sessions = 1
                    netperf_taskset_cpu = 0
                    check_cpu_affinity = yes
        - invalid_queues_number:
            start_vm = no
            type = invalid_para_mq
            queues = 9
        - multi_nics:
            check_vhost_threads = no
            mac_filter = "HWaddr (.\w+:\w+:\w+:\w+:\w+:\w+)"
            ip_filter = "inet addr:(.\d+.\d+.\d+.\d+)"
            net_check_cmd = "ifconfig"
            # set 'strick_check = yes' to enable it.
            wait_bg_time = 0
            bg_sub_test = multi_vms_nics
            strick_check = no
            virt_test_type = qemu
            flood_minutes = 1
            transfer_timeout = 1000
            ping_counts = 10
            mac_ip_filter = "(eth\d+).*?HWaddr (.\w+:\w+:\w+:\w+:\w+:\w+).*?inet addr:(.\d+.\d+.\d+.\d+)"
            Fedora.18:
                mac_ip_filter = "(em\d+).*inet (.\d+.\d+.\d+.\d+).*?ether (.\w+:\w+:\w+:\w+:\w+:\w+)"
            file_create_cmd = "dd if=/dev/urandom of=/tmp/1 bs=100M count=1"
            # We can test multi nics in multi vms by setting nics.
            nics += " nic2"
            vms += " vm2"
            image_snapshot = yes
