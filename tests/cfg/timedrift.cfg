- timedrift: install setup image_copy unattended_install.cdrom
    virt_test_type = qemu libvirt
    rtc_drift = "slew"
    variants:
        - ntp:
            no JeOS
            variants:
                - with_load:
                    type = timedrift
                    # Pin the VM and host load to CPU #0
                    cpu_mask = 0x1
                    # Set the load and rest durations
                    load_duration = 20
                    rest_duration = 20
                    # Fail if the drift after load is higher than 50%
                    drift_threshold = 50
                    # Fail if the drift after the rest period is higher than 10%
                    drift_threshold_after_rest = 10
                    # For now, make sure this test is executed alone
                    used_cpus = 100
                - with_migration:
                    type = timedrift_with_migration
                    migration_iterations = 3
                    drift_threshold = 10
                    drift_threshold_single = 3
                - with_reboot:
                    type = timedrift_with_reboot
                    reboot_iterations = 1
                    drift_threshold = 10
                    drift_threshold_single = 3
                - with_stop:
                    type = timedrift_with_stop
                    stop_interations = 1
                    drift_threshold = 10
                    drift_threshold_single = 3
        - date:
            variants:
                - with_load:
                    type = timedrift
                    # Pin the VM and host load to CPU #0
                    cpu_mask = 0x1
                    # Set the load and rest durations
                    load_duration = 20
                    rest_duration = 20
                    # Fail if the drift after load is higher than 50%
                    drift_threshold = 50
                    # Fail if the drift after the rest period is higher than 10%
                    drift_threshold_after_rest = 10
                    # For now, make sure this test is executed alone
                    used_cpus = 100
                - with_migration:
                    type = timedrift_with_migration
                    migration_iterations = 3
                    drift_threshold = 10
                    drift_threshold_single = 3
                - with_reboot:
                    type = timedrift_with_reboot
                    reboot_iterations = 1
                    drift_threshold = 10
                    drift_threshold_single = 3
                - with_stop:
                    type = timedrift_with_stop
                    stop_interations = 1
                    drift_threshold = 10
                    drift_threshold_single = 3
        - monotonicity:
            type = timedrift_monotonicity
            cmd_get_time = "date +%s%N"
            time_linger = 60
            host_path = "/tmp/timedrift-monotonicity-result.txt"
            cmd_timeout = 100
            kill_vm_on_error = yes
            # can use this cmd to load host in timedrift testing
            # pre_command = for(( I=0; I<`cat /proc/cpuinfo | grep processor | wc -l`;I++)) ;do echo $I; taskset -c $I /bin/bash -c 'for ((;;)); do X=1;done &'; done
            variants:
                - @default:
                - long:
                    time_linger = 1800
        - with_cpu_offline:
            no Windows
            type = timedrift_with_cpu_offline
            offline_cpu_cmd = echo 0 > /sys/devices/system/cpu/cpu1/online
            online_cpu_cmd = echo 1 > /sys/devices/system/cpu/cpu1/online
            interval_gettime = 120
            test_duration = 600
            smp_min =2
        - with_signal_stop:
            no RHEL.3.9
            no RHEL.4
            type = timedrift_with_stop
            stop_interations = 1
            stop_with_signal = yes
    variants:
        - @default:
            no RHEL.5
        - with_pvclock:
            boot_option_added = "divider=10"
            only RHEL.5
