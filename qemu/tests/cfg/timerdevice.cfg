- timerdevice:
    no Host_RHEL.5, Host_RHEL.6
    restart_vm = yes
    variants:
        - tscwrite:
            only Fedora.19, RHEL.7
            type = timerdevice_tscwrite
            msr_tools_install_cmd = "yum install -y msr-tools"
            msr_tools_cmd = "a=$(rdmsr -d 0x00000010); echo -e ibase=16\\n $a  | tail -n 1 | while read n; do wrmsr 0x00000010 $(($n+100000000000)); echo $n; done"
        - clock_drift_with_sleep:
            only RHEL
            no up
            type = timerdevice_clock_drift_with_sleep
            rtc_base = utc
            rtc_clock = host
            rtc_drift = slew
        - clock_drift_with_ntp:
            only Fedora.19, RHEL.7
            type = timerdevice_clock_drift_with_ntp
            host_cpu_cnt_cmd = "cat /proc/cpuinfo | grep "physical id" | wc -l"
            test_run_timeout = 7200
        - change_guest_clksource:
            only RHEL
            type = timerdevice_change_guest_clksource
            rtc_base = utc
            rtc_clock = host
            rtc_drift = slew
        - boot_test:
            type = timerdevice_boot
            rtc_drift = slew
            timerdevice_drift_threshold = 3
            variants:
                - clock_host:
                    rtc_clock = host
                - clock_vm:
                    rtc_clock = vm
            variants:
                - base_utc:
                    no Windows
                    rtc_base = utc
                - base_localtime:
                    only Windows
                    rtc_base = localtime
            variants:
                - clksource_unchanged:
                    only Windows
                    timerdevice_clksource = ""
                - clksource_kvm-clock:
                    only Fedora.19, RHEL
                    timerdevice_clksource = "kvm-clock"
                - clksource_tsc:
                    # Fedora guest can't bootup without '-kvmclock' option.
                    # And there is no way to change windows' clocksource.
                    only RHEL
                    timerdevice_clksource = "tsc"
                - clksource_pit:
                    only RHEL.3, RHEL.4, RHEL.5
                    timerdevice_clksource = "pit"
                    timerdevice_file_operation = "yes"
            variants:
                - with_boot:
                - with_reboot:
                    timerdevice_reboot_test = yes
                    variants:
                        - without_host_load:
                        - with_host_load:
                            timerdevice_host_load_cmd = "for (( I=0; I<`grep processor /proc/cpuinfo"
                            timerdevice_host_load_cmd += " | wc -l`; I++ )); do taskset -c $I /bin/bash -c"
                            timerdevice_host_load_cmd += " 'for ((;;)); do X=1; done &'; done"
                            timerdevice_host_load_stop_cmd = "pkill -f 'do X=1'"
                    variants:
                        - reboot_immediately:
                        - reboot_after_sleep:
                            timerdevice_sleep_time = 3600
        - tscsync:
            only Fedora.19, RHEL.7
            variants:
                - change_host_clksource:
                    type = timerdevice_tscsync_change_host_clksource
                    test_run_timeout = 10
                - longtime:
                    type = timerdevice_tscsync_longtime
                    host_socket_cnt_cmd = "cat /proc/cpuinfo | grep "physical id" | uniq | wc -l"
                    test_timeout = 36000
                    test_run_timeout = 14400
                    variants:
                        - one_socket:
                            vcpu_socket = 1
                        - two_sockets:
                            vcpu_socket = 2
