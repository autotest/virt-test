- rv:
    no JeOS
    vms = vm1 vm2
    guest_vm = vm1
    client_vm = vm2
    display_vm2 = vnc
    vga_vm2 = cirrus
    full_screen = no
    virtio_ports_vm1 = "vdagent"
    virtio_port_type_vm1 = "serialport"
    virtio_port_chardev_vm1 = "spicevmc"
    virtio_port_name_prefix_vm1 = "com.redhat.spice."
  
    variants:
        -RHEL.6.3.x86_64:
            image_name_vm2 = images/rhel63-64_client
        -RHEL.6.3.i386:
            image_name_vm2 = images/rhel63-32_client
        -RHEL.6.devel.x86_64:
            image_name_vm2 = images/rhel6devel-64_client
        -RHEL.6.devel.i386:
            image_name_vm2 = images/rhel6devel-32_client
    variants:
        - fullscreen_setup:
            type = fullscreen_setup
        - smartcard_setup:
            type = smartcard_setup
        - rv_connect:
            type = rv_connect
        - rv_video:
            type = rv_video
            video_binary = totem
            repeat_video = "yes"
            source_video_file = video_sample_test.ogv
            destination_video_file_path = /tmp/test.ogv
        - rv_migrate:
            type = migration
            main_vm = vm1
            migrate_background = yes
            migration_test_command = help
            #migration_bg_command = "cd /tmp; nohup tcpdump -q -i any -t ip host localhost"
            #migration_bg_check_command = pgrep tcpdump
            #migration_bg_kill_command = pkill tcpdump
            kill_vm_on_error = yes
            iterations = 2
            used_mem = 1024
            mig_timeout = 3600
            migration_protocol = "tcp"
            variants:
                - @default:
                - with_set_speed:
                    mig_speed = 1G
                    pre_migrate = "mig_set_speed"
                - with_reboot:
                    iterations = 1
                    type = migration_with_reboot
        - rv_fullscreen: fullscreen_setup, rv_connect
            type = rv_fullscreen
        - rv_copyandpaste: rv_connect
            type = rv_copyandpaste
            interpreter = python
            dst_dir = /tmp
            guest_script = cb.py
            script_params_img_set = --set_image
            script_params_img_save = -m
            script_params_writef = -f
            script_params_createf = -n
            final_textfile = StringLengthTest.txt
            final_image = PNGTest.png
            image_tocopy_name = Image-small.png
            final_image_bmp = BMPTest.bmp
            image_tocopy_name_bmp = Image2.bmp
            image_type = png
            script_params = --set
            script_params_clear = --clear
            text_to_test = Testing_this_text_was_copied
        - rv_input: rv_connect
            type = rv_input
            guest_script = key_event_form.py
        - rv_audio: rv_connect
            type = rv_audio
        - rv_logging: rv_connect
            type = rv_logging
            logtest = qxl
            qxl_log = /var/log/Xorg.0.log
            spice_log = /var/log/spice-vdagent.log
            interpreter = python
            dst_dir = /tmp
            guest_script = cb.py
            script_params = --set
            text_to_test = Testing_this_text_was_copied
        - rv_vdagent: rv_connect
            type = rv_vdagent
            vdagent_test = start
        - rv_smartcard: rv_connect
            type = rv_smartcard
        - rv_disconnect: rv_connect
            type = kill_app
        - rv_vmshutdown: rv_connect
            type = rv_vmshutdown
            cmd_cli_shutdown = "shutdown -h now"
            cmd_qemu_shutdown = "system_powerdown"
        - rv_clearx:
            type = rv_clearx
            kill_vm  = no
        - client_guest_shutdown:
            type = client_guest_shutdown
            shutdown_method = shell
            kill_vm = yes
            kill_vm_gracefully = no

    variants:
        #variant for a RHEL client and a RHEL guest 
        -rr:
        #variant for a RHEL client and a Windows guest
        -rw:
            pssword = 1q2w3eP
            password_vm2 = 123456
            display_vm2 = vnc
            os_type_vm2 = linux
            shell_prompt_vm2 = ^\[.*\][\#\$]\s*$
            shell_client_vm2 = ssh
            username_vm2 = root
            shell_port_vm2 = 22
            status_test_command_vm2 = echo $?

        #variant for a Windows client and a RHEL guest
        -wr:
        #variant for a Windows client and a Windows guest
        -ww:

