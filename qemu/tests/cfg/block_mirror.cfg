- block_mirror:
    only qcow2
    backup_image_before_testing = yes
    restore_image_after_testing = yes
    # block_mirror_cmd for rhel7 configured in host-os.cfg.sample
    block_mirror_cmd = "__com.redhat_drive-mirror"
    block_reopen_cmd = "__com.redhat_drive-reopen"
    wait_timeout = 3600
    # wait_timeout: wait xx seconds for block mirror job go into steady status, aka offset equal image length
    source_images = "image1"
    # source_images: set which image will be mirroring to target, now only a image at one time;
    full_copy_image1 = "full"
    #for full image or top most
    default_speed_image1 = 0
    # default speed unit is B/s, for 10MB/s please set speed to '10M'
    target_format_image1 = "qcow2"
    create_mode_image1 = "absolute-paths"
    target_image_image1 = "/tmp/target1"
    variants:
        # values of parameters before/after_xxx is function name which define in block_copy/block_mirror/block_mirror_xxx modules
        # set functions here, functions will be call when/afer xxx period one by one;
        - simple:
            type = drive_mirror_simple
            variants:
                - cancel:
                    before_steady = "cancel"
                    cancel_timeout_image1 = 3
                - set_speed:
                    max_speed_image1 = 10M
                    before_steady = "set_speed"
                - reset_speed:
                    default_speed_image1 = 10M
                    max_speed_image1 = 1M
                    before_steady = "set_speed"
                - query:
                    before_steady = "query_status"
                    default_speed_image1 = 3M
                    max_speed_image1 = 10M
        - with_stress:
            type = drive_mirror_stress
            variants:
                - heavyload:
                    # configuration abort start/stop/check heavyload apps commands on windows guest set in  guest-os-internal.cfg.sample
                    start_cmd = "stress --cpu 4 --io 4 --vm 2 --vm-bytes 256M --quiet &"
                    check_cmd = 'pidof -s stress'
                    stop_cmd = "killall -g stress"
                    variants:
                        - stress:
                            before_start = "load_stress"
                            when_steady = "reopen"
                            after_reopen = "reboot verify_alive"
                        - stop:
                            before_start = "load_stress"
                            before_steady = "stop"
                            when_steady = "reopen resume"
                            after_reopen = "reboot verify_alive"
                        - check_steady:
                            before_start = "load_stress"
                            when_steady = "verify_steady"
                            #seconds to verify offset not decrease when guest in steady status
                            hold_on_timeout = 300
                            after_reopen = "reboot verify_alive"
                - dd:
                    # dd command for windows/linux guest set in guest-os-internal.cfg
                    # This case create 2G file and update content many times (default is 3 times), in guest when mirroring job runing;
                    # During test offset may decrease then increase that's correct; don't worry wait with patience;
                    start_cmd = "for i in `seq 1 3`;do dd if=/dev/random of=/tmp/tmp.img bs=1M count=2048; rm -f /tmp/tmp.img;done&"
                    check_cmd = "pidof -s dd"
                    stop_cmd = "killall -g dd;rm -f /tmp/tmp.img"
                    before_start = "load_stress"
                    when_steady = "reopen"
                    after_reopen = "reboot verify_alive"
        - reboot:
            type = drive_mirror_reboot
            when_steady = "reopen stop_reset"
            after_reopen = "reboot verify_alive"
        - powerdown:
            start_cmd = 'sh -c "wget -c http://fileshare.englab.nay.redhat.com/pub/section2/kvm/pub/auto_rsc/linux-2.6.34.14.tar.gz -O /mnt/Linux.tgz && '
            start_cmd += 'tar -xzvf /mnt/Linux.tgz  -C /mnt && cd /mnt/linux-2.6.34.14 && make clean && make defconfig && make && make modules"'
            check_cmd = 'pidof -s sh'
            stop_cmd = 'pkill sh;rm -rf /mnt/linux-2.6.34.14'
            type = drive_mirror_powerdown
            before_start = "load_stress"
            when_steady = "powerdown"
            after_reopen ="verify_alive"
