- migrate: install setup image_copy unattended_install.cdrom
    type = migration
    migration_test_command = help
    migration_bg_command = "cd /tmp; nohup tcpdump -q -i any -t ip host localhost"
    migration_bg_check_command = pgrep tcpdump
    migration_bg_kill_command = pkill tcpdump
    kill_vm_on_error = yes
    iterations = 2
    used_mem = 1024
    mig_timeout = 3600
    ping_pong = 1
    # you can uncomment the following line to enable the state
    # check
    # vmstate_check = yes
    variants:
        - x-rdma:
            migration_protocol = "x-rdma"
        - rdma:
            migration_protocol = "rdma"
        - tcp:
            migration_protocol = "tcp"
        - unix:
            migration_protocol = "unix"
        - exec:
            migration_protocol = "exec"
            variants:
                - @default_exec:
                - gzip_exec:
                    migration_exec_cmd_src = "gzip -c > %s"
                    migration_exec_cmd_dst = "gzip -c -d %s"
        - fd:
            migration_protocol = "fd"
        - mig_cancel:
            migration_protocol = "tcp"
            mig_cancel = yes
            only migrate..default
        - mig_cancel_x_rdma:
            migration_protocol = "x-rdma"
            mig_cancel = yes
            only migrate..default
        - mig_cancel_rdma:
            migration_protocol = "rdma"
            mig_cancel = yes
            only migrate..default
    variants:
        - @default:
        - with_speed_measurement:
            no JeOS
            # migration speed in bytes. Default scaler is M (350 == 350M)
            only Linux
            mig_speed = 125M
            # accuracy of mig_speed
            # speed_range = (mig_speed+-(mig_speed*mig_speed_accuracy))
            # if real_mig_speed is on in speed_range it raises Test warning.
            mig_speed_accuracy = 0.3
            pre_migrate = "set_speed_and_install"
            type = migration_with_speed_measurement
            exec:
                # Exec migration is pretty slow compared to other protos
                mig_speed = 50M
        - with_set_speed:
            mig_speed = 1G
            pre_migrate = "mig_set_speed"
        - with_reboot:
            iterations = 1
            type = migration_with_reboot
        - with_file_transfer:
            no JeOS
            iterations = 1
            type = migration_with_file_transfer
        - mig_dest_problem:
            no JeOS
            only Linux
            requires_root = yes
            master_images_clone = "image1"
            type = migration_with_dst_problem
            migration_exec_cmd_src = "gzip -c > %s"
            variants:
                - read_only_dest:
                    test_type = test_read_only_dest
                    only exec
                    vms = "virt_test_vm1_guest virt_test_vm2_data_server"
                    start_vm_vm1_guest = no
                    read_only_timeout = 480
                    migration_protocol = exec
                    migration_exec_cmd_src = "gzip -c > %s"
                - low_space_dest:
                    test_type = test_low_space_dest
                    only exec
                    vms = "virt_test_vm1_guest"
                    disk_size = 10M
                    migration_protocol = exec
                    migration_exec_cmd_src = "gzip -c > %s"
        - after_extensive_io:
            only Linux
            no JeOS
            requires_root = yes
            master_images_clone = "image1"
            type = migration_with_dst_problem
            vms = "vm1 virt_test_vm2_data_server"

            copy_block_size = 100M
            kill_vm_gracefully_virt_test_vm2_data_server = yes
            start_vm_vm1 = no
            images_vm1 = "$images image2"
            image_boot_image2_vm1 = no
            image_name_image2_vm1 = "test"
            force_create_image_image2_vm1 = yes
            # Set in test runtime
            images_base_dir_image2_vm1 = ""
            drive_serial_image1_vm1 = "root-image1-vm1"
            drive_serial_image2_vm1 = "shared-image2-vm1"
            drive_cache = "none"
            guest_disk_mount_path = "/mnt"
            kill_vm = yes
            copy_timeout = 1024
            server_recover_timeout = 240
            variants:
                - nfs:
                    test_type = test_extensive_io_nfs
                - iscsi:
                    test_type = test_extensive_io_iscsi
                    iscsi_variant = tgt
        - with_autotest:
            no JeOS
            only Linux
            type = autotest_control
            migrate_background = yes
            test_timeout = 1800
            variants:
                - dbench:
                    test_control_file = dbench.control
                - stress:
                    test_control_file = stress.control
                - monotonic_time:
                    test_control_file = monotonic_time.control
        - with_stress:
            no JeOS
            only Linux
            iterations = 1
            variants:
                - io_stress:
                    test_timeout = 4200
                    ping_pong = 10
                    guest_stress_test = "autotest"
                    test_type = "iozone"
                    stress_stop_cmd = "killall autotest"
                - mem_stress:
                    ping_pong = 10
                    test_timeout = 600
                    guest_stress_test = "autotest"
                    test_type = "stress_memory_heavy"
        - between_vhost_novhost:
            no JeOS
            only Host_RHEL.6
            no Host_RHEL.6.1
            migrate_between_vhost_novhost = "yes"
            type = migration_with_file_transfer
        - with_netperf:
            no JeOS
            only Linux
            iterations = 1
            type = migration_with_netperf
            client_num = 100
            netperf_timeout = 1000
            mig_timeout = 1000
            netperf_files = netperf-2.6.0.tar.bz2
            setup_cmd = "cd /tmp && rm -rf netperf-2.6.0 && tar xvfj netperf-2.6.0.tar.bz2 && cd netperf-2.6.0 && ./configure --enable-burst --enable-demo=yes && make"
            netperf_cmd = /tmp/netperf-2.6.0/src/netperf -H %s -l %s
            netserver_cmd =  /tmp/netperf-2.6.0/src/netserver
            cleanup_cmd = "rm -rf /tmp/netperf-2.6.0.tar.bz2; rm -rf netperf-2.6.0"
