- win_virtio_update:
    virt_test_type = qemu
    type = win_virtio_update
    only Windows
    vms = ""
    drivers_install = "balloon;block;nic"
    mount_point = "/tmp/mnt"
    driver_install_cmd_balloon = cmd /c WIN_UTILS:\\whql\virtio_driver_install_whql.exe WIN_VIRTIO:\\Balloon\\xp\\x86 balloon
    driver_install_cmd_block = cmd /c  WIN_UTILS:\\whql\virtio_driver_install_whql.exe WIN_VIRTIO:\\viostor\\xp\\x86 block
    driver_install_cmd_nic = cmd /c WIN_UTILS:\\whql\virtio_driver_install_whql.exe WIN_VIRTIO:\\\NetKVM\\xp\\x86 nic
    extra_params += " -balloon virtio"
    images += " stg"
    image_name_stg = "images/storage"
    image_size_stg = 1G
    drive_format_stg = virtio
    force_create_image_stg = yes
    nics += " nic2"
    nic_model_nic2 = virtio
    cdroms += " virtio"
    cdrom_virtio = isos/windows/virtio-win.iso
    kill_rundll = no
    variants:
        - install_driver:
             case_type = driver_install
             check_str_balloon = Virtio Balloon
             check_str_block = Virtio SCSI DISK
             check_str_nic = VirtIO Ethernet Adapter
             check_cmd = wmic sysdriver get caption
             check_cmd_block = wmic diskdrive get caption
             check_cmd_nic = wmic nic get caption
        - upgrade_downgrade:
             # This test force on test some sepical version of virtio_drivers so if your virtio dirver is not the standard
             # version get from fedora server, please use following parameters to make your own dirver iso
             # prewhql_install = yes
             # cdrom_virtio = /tmp/virtio-win.iso
             # url_virtio_win =
             check_str_balloon = Virtio Balloon
             check_str_block = Virtio SCSI DISK
             check_str_nic = VirtIO Ethernet Adapter
             check_cmd = wmic sysdriver get caption
             check_cmd_block = wmic diskdrive get caption
             check_cmd_nic = wmic nic get caption

             variants:
                 - block:
                     drivers_install = block
                     op_cmd = cmd /c  E:\\whql\virtio_driver_check_whql.exe F:\\WXp\\x86 block
                     driver_install_cmd_block = cmd /c  E:\\whql\virtio_driver_install_whql.exe F:\\WXp\\x86 block
        - check_info:
            type = win_virtio_update
            drivers_install = "balloon;block;nic;serial"
            vms = ""
            check_info = yes
            drivers_check = "balloon;nic;block;serial"
            mount_point = "/tmp/mnt"
            driver_install_cmd_balloon = cmd /c WIN_UTILS:\\whql\virtio_driver_install_whql.exe WIN_VIRTIO:\\Balloon\\2k3\\x86 balloon
            driver_install_cmd_block = cmd /c  WIN_UTILS:\\whql\virtio_driver_install_whql.exe WIN_VIRTIO:\\viostor\\2k3\\x86 block
            driver_install_cmd_nic = cmd /c WIN_UTILS:\\whql\virtio_driver_install_whql.exe WIN_VIRTIO:\\NetKVM\\2k3\\x86 nic
            driver_install_cmd_serial = cmd /c WIN_UTILS:\\whql\virtio_driver_install_whql.exe WIN_VIRTIO:\\Balloon\\2k3\\x86 serial
            check_str = "version::DriverVer=\d+/\d+/\d+,([\d\.]+);name::DeviceDesc\s+=\s+"(.*)";copyright::Copyright \(c\).*"
            check_cmd = "version::wmic datafile where name='DRIVER_PATH' get version;name::C:\pecheck.py DRIVER_PATH DRIVER_PATTERN_name;copyright::C:\pecheck.py DRIVER_PATH DRIVER_PATTERN_copyright"
            info_pattern_name_balloon = "FileDescription:\s+(.*)"
            info_pattern_name = "ProductName:\s+(.*)"
            info_pattern_copyright = "LegalCopyright:\s+(.*)"
            sys_file_path_balloon = "c:\\\\windows\\\\system32\\\\drivers\\\\balloon.sys"
            sys_file_path_block = "c:\\\\windows\\\\system32\\\\drivers\\\\viostor.sys"
            sys_file_path_nic = "c:\\\\windows\\\\system32\\\\drivers\\\\netkvm.sys"
            sys_file_path_serial = "c:\\\\windows\\\\system32\\\\drivers\\\\vioser.sys"
            python_scripts = "del C:\pecheck.py && echo import pefile, re, sys > C:\pecheck.py && echo filename = sys.argv[1] >>  C:\pecheck.py && echo pattern_c =  sys.argv[2] >> C:\pecheck.py && echo pe = pefile.PE(filename) >> C:\pecheck.py && echo peinfo = pe.dump_info() >> C:\pecheck.py && echo print re.findall(pattern_c, peinfo)[0].strip() >> C:\pecheck.py"
            pattern_driver = WIN_VIRTIO:(.*)[/s+"]

