- @Linux:
    os_type = linux
    shutdown_command = shutdown -h now
    reboot_command = shutdown -r now
    status_test_command = echo $?
    username = root
    password = 123456
    shell_client = ssh
    shell_port = 22
    file_transfer_client = scp
    file_transfer_port = 22
    mem_chk_cmd = dmidecode -t 17 | awk -F: '/Size/ {print $2}'
    mem_chk_re_str = [^\$]([0-9]+)
    mem_chk_cur_cmd = grep MemTotal /proc/meminfo
    cpu_chk_cmd = grep -c processor /proc/cpuinfo
    timedrift:
        extra_params += " -no-kvm-pit-reinjection"
        time_command = date +'TIME: %a %m/%d/%Y %H:%M:%S.%N'
        time_filter_re = "(?:TIME: \w\w\w )(.{19})(?:\.\d\d)"
        time_format = "%m/%d/%Y %H:%M:%S"
        guest_load_command = "dd if=/dev/urandom of=/dev/null"
        guest_load_instances = 2
        guest_load_stop_command = "killall -9 dd"
        host_load_command = "bzip2 -c --best /dev/urandom > /dev/null"
        host_load_instances = 8
        ntp:
            time_command = "ntpdate -d -q pool.ntp.org"
            time_filter_re = "originate timestamp:.*, (.\w+\s+\d+\s+\d+\s+\d+:\d+:\d+)\.(.\d+)"
            time_format = "%b %d %Y %H:%M:%S"
        date:
            time_command = date +'TIME: %a %m/%d/%Y %H:%M:%S.%N'
            time_filter_re = "(?:TIME: \w\w\w )(.{19})(?:\.\d\d)"
            time_format = "%m/%d/%Y %H:%M:%S"
    time_manage:
        time_command = date +'TIME: %a %m/%d/%Y %H:%M:%S.%N'
        time_filter_re = "(?:TIME: \w\w\w )(.{19})(?:\.\d\d)"
        time_format = "%m/%d/%Y %H:%M:%S"
    file_transfer:
        tmp_dir = /tmp/
        clean_cmd = rm -f
    nicdriver_unload:
        readlink_command = readlink -e
        sys_path = "/sys/class/net/%s/device/driver"
    multi_disk:
        show_mount_cmd = mount|gawk '/mnt/{print $1}'
        clean_cmd = "\rm -rf /mnt/*"
        cmd_list = "copy_to_command copy_from_command"
        file_system = "ext3 ext2"
        mount_command = mkdir /mnt/%s && mount /dev/%s /mnt/%s
        umount_command = umount /dev/%s && rmdir /mnt/%s
        list_volume_command = cd /dev && \ls [vhs]d*
        re_str = "[vhs]d[a-z]*"
        format_command = echo y | mkfs -t %s /dev/%s
        copy_to_command = \cp -rf /bin/ls /mnt/%s
        copy_from_command = \cp -rf /mnt/%s/ls /tmp/ls
        compare_command = md5sum /bin/ls > /tmp/ls.md5 && cd /tmp && md5sum -c ls.md5
        check_result_key_word = OK
        max_disk:
             stg_image_num = 27
             list_volume_command = cd /dev && \ls vd*
             re_str = "[vhs]d[a-z]*[^0-9]"
    usb_multi_disk:
        show_mount_cmd = mount|gawk '/mnt/{print $1}'
        clean_cmd = "\rm -rf /mnt/*"
        cmd_list = "copy_to_command copy_from_command"
        file_system = "ext3 ext2"
        mount_command = mkdir /mnt/%s && mount /dev/%s /mnt/%s
        umount_command = umount /dev/%s && rmdir /mnt/%s
        list_volume_command = cd /dev && \ls [vhs]d?
        re_str = "[vhs]d[a-z]"
        format_command = echo y | mkfs -t %s /dev/%s
        copy_to_command = \cp -rf /bin/ls /mnt/%s
        copy_from_command = \cp -rf /mnt/%s/ls /tmp/ls
        compare_command = cd /bin && md5sum ls > /tmp/ls.md5 && cd /tmp && md5sum -c ls.md5
        check_result_key_word = OK
        max_disk:
            list_volume_command = cd /dev && \ls [vhs]d*
            re_str = "[vhs]d[a-z]"
    floppy_test:
        format_floppy_cmd = mkfs -t ext3 /dev/fd0
        test_floppy_cmd = (dd if=/dev/urandom of=/mnt/test_floppy bs=1M count=1) && (rm -f /mnt/test_floppy)
        format_floppy_cmd = mkfs -t ext3 /dev/fd0
        source_file = /etc/passwd
        dest_file = /mnt/passwd
        clean_cmd = rm -f
        mount_dir = /mnt/
        md5_cmd = md5sum
        diff_file_cmd = diff
        copy_cmd = cp
    unattended_install:
        # Change the config below to yes if you want to use syslog
        # to get anaconda logs (leads to verbose install logs)
        syslog_server_enabled = no
    guest_s4, hibernate:
        check_s4_support_cmd = grep -q disk /sys/power/state
        test_s4_cmd = "cd /tmp; nohup tcpdump -q -i any -t ip host localhost"
        check_s4_cmd = pgrep tcpdump
        set_s4_cmd = echo disk > /sys/power/state
        kill_test_s4_cmd = pkill tcpdump
        services_up_timeout = 30
