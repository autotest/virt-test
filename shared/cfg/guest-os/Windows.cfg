- @Windows:
    vfd_size = 2880k
    os_type = windows
    use_libvirt_cdrom_switch = yes
    shutdown_command = shutdown /s /f /t 0
    reboot_command = shutdown /r /f /t 0
    status_test_command = echo %errorlevel%
    shell_prompt = "^\w:\\.*>\s*$"
    username = Administrator
    # Attention: Changing the password in this file is not supported,
    # since files in winutils.iso use it.
    password = 1q2w3eP
    shell_linesep = "\r\n"
    shell_client = nc
    shell_port = 10022
    file_transfer_client = rss
    file_transfer_port = 10023
    redirs += " file_transfer"
    guest_port_remote_shell = 10022
    guest_port_file_transfer = 10023

    # This ISO will be used for all tests except install:
    cdrom_cd1 = isos/windows/winutils.iso

    cpu_chk_cmd = echo %NUMBER_OF_PROCESSORS%
    mem_chk_cmd = wmic memphysical
    mem_chk_cur_cmd = wmic memphysical

    rtc_base = localtime

    unattended_install.cdrom, whql.support_vm_install:
        timeout = 7200
        finish_program = deps/finish.bat
        # process need to check after post install
        # process_check = $process_name
        cdroms += " winutils"
        cdrom_winutils = isos/windows/winutils.iso
        drive_index_winutils = 2
        kernel =
        initrd =
    migrate:
        migration_test_command = ver && vol
        migration_bg_command = start ping -t localhost
        migration_bg_check_command = tasklist | find /I "ping.exe"
        migration_bg_kill_command = taskkill /IM ping.exe /F
    migrate.with_file_transfer:
        guest_path = C:\tmpfile
    stress_boot:
        alive_test_cmd = systeminfo
    block_stream:
        alive_test_cmd = systeminfo
    timedrift:
        # Timedrift compensation on Windows with hpet does not happen
        disable_hpet = yes
        extra_params += " -rtc-td-hack"
        time_command = "echo TIME: %date% %time%"
        time_filter_re = "(?<=TIME: \w\w\w ).{19}(?=\.\d\d)"
        time_format = "%m/%d/%Y %H:%M:%S"
        # For this to work, the cdrom at d: should contain vlc (d:\vlc\vlc.exe) and a video (d:\ED_1024.avi)
        guest_load_command = 'cmd /c "d:\vlc\vlc -f --loop --no-qt-privacy-ask --no-qt-system-tray d:\ED_1024.avi"'
        # Alternative guest load:
        #guest_load_command = "(dir /s && dir /s && dir /s && dir /s) > nul"
        guest_load_stop_command = "taskkill /F /IM vlc.exe"
        guest_load_instances = 2
        host_load_command = "bzip2 -c --best /dev/urandom > /dev/null"
        # Alternative host load:
        #host_load_command = "dd if=/dev/urandom of=/dev/null"
        host_load_instances = 8
        ntp:
            time_command = "w32tm /stripchart /samples:1 /computer:pool.ntp.org"
            time_filter_re = "\d+/\d+/\d+\s\d+:\d+:\d+ [AP]M"
            time_format = "%m/%d/%Y %H:%M:%S"
        date:
            time_command = "echo TIME: %date% %time%"
            time_filter_re = "(?<=TIME: \w\w\w ).{19}(?=\.\d\d)"
            time_format = "%m/%d/%Y %H:%M:%S"
    time_manage:
        alive_test_cmd = systeminfo
        time_command = "echo TIME: %date% %time%"
        time_filter_re = "(?<=TIME: \w\w\w ).{19}(?=\.\d\d)"
        time_format = "%m/%d/%Y %H:%M:%S"
    guest_s4, hibernate:
        check_s4_support_cmd = powercfg /hibernate on
        test_s4_cmd = start ping -t localhost
        check_s4_cmd = tasklist | find /I "ping.exe"
        set_s4_cmd = rundll32.exe PowrProf.dll, SetSuspendState
        kill_test_s4_cmd = taskkill /IM ping.exe /F
        services_up_timeout = 30
    nic_hotplug:
        reference_cmd = ipconfig /all
        find_pci_cmd = ipconfig /all | find "Description"
        wait_secs_for_hook_up = 10
        nic_e1000:
            match_string = "Intel(R) PRO/1000 MT Network Connection"
        nic_virtio:
            match_string = "VirtIO Ethernet"
    block_hotplug:
        wait_secs_for_hook_up = 10
        reference_cmd = wmic diskdrive list brief
        find_pci_cmd = wmic diskdrive list brief
        pci_test_cmd = echo select disk 1 > dt && echo online >> dt && echo detail disk >> dt && echo exit >> dt && diskpart /s dt
    physical_resources_check:
        catch_uuid_cmd =
        cpu_vendor_id_chk_cmd = "wmic cpu get Manufacturer | more +1"
        vio_driver_chk_cmd = 'driverquery /si | find "Red Hat"'
        #XXX: Since I don't find a reliable way to check the cpu socket
        # numbers for windows, disable this kind of checking temporarily.
        cpu_sockets_chk_cmd = ""
        cpu_cores_chk_cmd = "wmic cpu get NumberOfCores | more +1"
        cpu_threads_chk_cmd = "wmic cpu get NumberOfLogicalProcessors | more +1"
    file_transfer:
        tmp_dir = C:\
        clean_cmd = del
    vmstop:
        guest_path = C:\
    multi_disk:
        black_list += " E:"
        shell_port = 23
        shell_client = telnet
        post_cmd = del c:\cmd.exe
        file_system = "ntfs fat32"
        cmd_list = "copy_to_command copy_from_command"
        list_volume_command = wmic volume get driveletter
        re_str = "([A-Z]:)"
        format_command = format /fs:%s %s /q /y
        copy_to_command = copy C:\WINDOWS\system32\cmd.exe %s /y
        copy_from_command = copy %s\cmd.exe c:\ /y
        compare_command = fc /b c:\windows\system32\cmd.exe c:\cmd.exe
        check_result_key_word = no difference
        signal_repeat:
            pre_cmd = del diskpart.script && (echo select disk 1 >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script
        max_disk:
            pre_cmd = del diskpart.script && (for /L %i in (1 1 23) do echo select disk %i >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script
    usb_multi_disk:
        black_list += " E:"
        shell_port = 23
        shell_client = telnet
        post_cmd = del c:\cmd.exe
        file_system = "ntfs fat32"
        cmd_list = "copy_to_command copy_from_command"
        list_volume_command = wmic volume get driveletter
        re_str = "([A-Z]:)"
        format_command = format /fs:%s %s /q /y
        copy_to_command = copy C:\WINDOWS\system32\cmd.exe %s /y
        copy_from_command = copy %s\cmd.exe c:\ /y
        compare_command = fc /b c:\windows\system32\cmd.exe c:\cmd.exe
        check_result_key_word = no difference
        signal_repeat:
            pre_cmd = del diskpart.script && (echo select disk 1 >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script
        max_disk:
            disks_num = 23
            pre_cmd = del diskpart.script && (for /L %i in (1 1 23) do echo select disk %i >> diskpart.script && echo create partition primary >> diskpart.script && echo assign >> diskpart.script) && echo select disk 0 >> diskpart.script && echo exit >> diskpart.script && diskpart /s diskpart.script
    floppy_test:
        format_floppy_cmd = echo n|format A: /Q /V:test_floppy
        source_file = C:\Windows\System32\cmd.exe
        dest_file = A:\cmd.exe
        clean_cmd = del
        diff_file_cmd = fc
        test_floppy_cmd = "chkdsk A:"
        copy_cmd = copy
    unattended_install:
        dump_path = C:\Windows\Memory.dmp
        analyze_cmd = E:\autoit3.exe E:\dump_control.au3
        sub_type = nmi_bsod_catch
        rename_error_image = yes
